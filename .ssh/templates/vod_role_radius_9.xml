<?xml version='1.0' encoding='UTF-8'?>
<template role="radius" version="2.1" type="role">


    <!-- ############################################################################################## -->
    <!-- Version 1.1                                                                                    -->
    <!--  - se aÃ±ade visualizacion de campos en visa tecnica                                            --> 
    <!-- Version 1.0                                                                                    -->
    <!--  - Version de partida                                                                          -->
    <!-- ############################################################################################## -->

     <parameters>

    	<!-- ENDPOINT REQUEST PARAMS -->

    		<parameter id="par_template">
                <contents>
                	<value type="lookup">speed_list</value>
                </contents>
                <sequence>
                  <operation type="row_delimiter">
                  	<args><arg><value type="value">;</value></arg></args>
                  </operation>
                  <operation type="column_delimiter">
                  	<args><arg><value type="value">,</value></arg></args>
                  </operation>
                  <operation type="column_index">
                  	<args><arg><value type="value">1</value></arg></args>
                  </operation>
                  <operation type="column_equal">
                  	<args><arg><value type="parameter">par_radius_generic_template</value></arg></args>
                  </operation>
                  <operation type="column_selector">
                  	<args><arg><value type="value">1</value></arg></args>
                  </operation>
                </sequence>
            </parameter>

            <parameter id="par_template_pool">
                <contents>
                	<value type="lookup">speed_list</value>
                </contents>
                <sequence>
                  <operation type="row_delimiter">
                  	<args><arg><value type="value">;</value></arg></args>
                  </operation>
                  <operation type="column_delimiter">
                  	<args><arg><value type="value">,</value></arg></args>
                  </operation>
                  <operation type="column_index">
                  	<args><arg><value type="value">1</value></arg></args>
                  </operation>
                  <operation type="column_equal">
                  	<args><arg><value type="parameter">par_radius_generic_template</value></arg></args>
                  </operation>
                  <operation type="column_selector">
                  	<args><arg><value type="value">6</value></arg></args>
                  </operation>
                </sequence>
            </parameter>

            <parameter id="par_template_pool_nat">
                <contents>
                	<value type="lookup">speed_list</value>
                </contents>
                <sequence>
                  <operation type="row_delimiter">
                  	<args><arg><value type="value">;</value></arg></args>
                  </operation>
                  <operation type="column_delimiter">
                  	<args><arg><value type="value">,</value></arg></args>
                  </operation>
                  <operation type="column_index">
                  	<args><arg><value type="value">1</value></arg></args>
                  </operation>
                  <operation type="column_equal">
                  	<args><arg><value type="parameter">par_radius_generic_template</value></arg></args>
                  </operation>
                  <operation type="column_selector">
                  	<args><arg><value type="value">10</value></arg></args>
                  </operation>
                </sequence>
            </parameter>

            <parameter id="par_template_perfil">
                <contents>
                	<value type="lookup">speed_list</value>
                </contents>
                <sequence>
                  <operation type="row_delimiter">
                  	<args><arg><value type="value">;</value></arg></args>
                  </operation>
                  <operation type="column_delimiter">
                  	<args><arg><value type="value">,</value></arg></args>
                  </operation>
                  <operation type="column_index">
                  	<args><arg><value type="value">1</value></arg></args>
                  </operation>
                  <operation type="column_equal">
                  	<args><arg><value type="parameter">par_radius_generic_template</value></arg></args>
                  </operation>
                  <operation type="column_selector">
                  	<args><arg><value type="value">8</value></arg></args>
                  </operation>
                </sequence>
            </parameter>

            <parameter id="par_template_perfil_nat">
                <contents>
                	<value type="lookup">speed_list</value>
                </contents>
                <sequence>
                  <operation type="row_delimiter">
                  	<args><arg><value type="value">;</value></arg></args>
                  </operation>
                  <operation type="column_delimiter">
                  	<args><arg><value type="value">,</value></arg></args>
                  </operation>
                  <operation type="column_index">
                  	<args><arg><value type="value">1</value></arg></args>
                  </operation>
                  <operation type="column_equal">
                  	<args><arg><value type="parameter">par_radius_generic_template</value></arg></args>
                  </operation>
                  <operation type="column_selector">
                  	<args><arg><value type="value">9</value></arg></args>
                  </operation>
                </sequence>
            </parameter>

            <parameter id="par_template_realspeed">
                <contents>
                	<value type="lookup">speed_list</value>
                </contents>
                <sequence>
                  <operation type="row_delimiter">
                  	<args><arg><value type="value">;</value></arg></args>
                  </operation>
                  <operation type="column_delimiter">
                  	<args><arg><value type="value">,</value></arg></args>
                  </operation>
                  <operation type="column_index">
                  	<args><arg><value type="value">1</value></arg></args>
                  </operation>
                  <operation type="column_equal">
                  	<args><arg><value type="parameter">par_radius_generic_template</value></arg></args>
                  </operation>
                  <operation type="column_selector">
                  	<args><arg><value type="value">11</value></arg></args>
                  </operation>
                </sequence>
            </parameter>

            <!-- Valor introducido para lanzar el trb -->
            <parameter id="par_radius_generic_template" type="value">
                <contents><value type="parameter" role="front">par_generic_template</value>
                    <!--<operation type="value">
	<args><arg><value type="value">X1-PPP-35</value></arg></args>
</operation>-->
                </contents>
            </parameter>
            
            <parameter id="par_radius_datalogin" type="value">
                <contents><value type="parameter" role="front">par_inet_data_login</value>
                    <!--<operation type="value">
	<args><arg><value type="value">VFAF0000000089708@vodafone</value></arg></args>
</operation>-->
                </contents>
            </parameter>

             <parameter id="par_radius_serviceid_data_password" type="value">
                <contents><value type="parameter" role="front">par_grc_serviceid_data_password</value>
                    <!--<operation type="value">
  <args><arg><value type="value">VFAF0000000089708@vodafone</value></arg></args>
</operation>-->
                </contents>
            </parameter>

            <parameter id="par_radius_service_id" type="value">
                <contents><value type="parameter" role="front">par_grc_service_id</value>
                    <!--<operation type="value">
	<args><arg><value type="value">VFAF0000000089708@vodafone</value></arg></args>
</operation>-->
                </contents>
            </parameter>

    	<!-- ENDPOINT RESPONSE PARAMS -->
			<!-- Parametros de Servicio_por_network_id -->
	            <parameter id="par_snid_http_code" type="value">
	                <contents>
	                	<value type="infosource_value" infosource="radius" endpointid="snid">_httpCode</value>
	                </contents> 
	            </parameter>

	            <parameter id="par_snid_err_code">
	                <contents>
	                	<value type="infosource_value" infosource="radius" endpointid="snid">_errCode</value>
	                </contents>
	            </parameter>

	            <parameter id="par_snid_err_desc">
	                <contents>
	                	<value type="infosource_value" infosource="radius" endpointid="snid">_errDesc</value>
	                </contents>
	            </parameter>
			<!-- Parametros de Servicio_por_network_id (Lowi) -->
	            <parameter id="par_snidlw_http_code" type="value">
	                <contents>
	                	<value type="infosource_value" infosource="radius" endpointid="snidlw">_httpCode</value>
	                </contents> 
	            </parameter>

	            <parameter id="par_snidlw_err_code">
	                <contents>
	                	<value type="infosource_value" infosource="radius" endpointid="snidlw">_errCode</value>
	                </contents>
	            </parameter>

	            <parameter id="par_snidlw_err_desc">
	                <contents>
	                	<value type="infosource_value" infosource="radius" endpointid="snidlw">_errDesc</value>
	                </contents>
	            </parameter>

              <!-- Parametros de Servicio_por_network_id (HFC)-->
              <parameter id="par_snidhfc_http_code" type="value">
                  <contents>
                    <value type="infosource_value" infosource="radius" endpointid="snidhfc">_httpCode</value>
                  </contents> 
              </parameter>

              <parameter id="par_snidhfc_err_code">
                  <contents>
                    <value type="infosource_value" infosource="radius" endpointid="snidhfc">_errCode</value>
                  </contents>
              </parameter>

              <parameter id="par_snidhfc_err_desc">
                  <contents>
                    <value type="infosource_value" infosource="radius" endpointid="snidhfc">_errDesc</value>
                  </contents>
              </parameter>

            <!-- Parametros de Radius_Logs_del_usuario -->
	            <parameter id="par_rlu_http_code" type="value">
	                <contents>
	                	<value type="infosource_value" infosource="radius" endpointid="rlu">_httpCode</value>
	                </contents> 
	            </parameter>

	            <parameter id="par_rlu_err_code">
	                <contents>
	                	<value type="infosource_value" infosource="radius" endpointid="rlu">_errCode</value>
	                </contents>
	            </parameter>

	            <parameter id="par_rlu_err_desc">
	                <contents>
	                	<value type="infosource_value" infosource="radius" endpointid="rlu">_errDesc</value>
	                </contents>
	            </parameter>

	        <!-- Parametros de Fix Car Actual IP -->
	            <parameter id="par_fc_http_code" type="value">
	                <contents>
	                	<value type="infosource_value" infosource="radius" endpointid="fc">_httpCode</value>
	                </contents> 
	            </parameter>

	            <parameter id="par_fc_err_code">
	                <contents>
	                	<value type="infosource_value" infosource="radius" endpointid="fc">_errCode</value>
	                </contents>
	            </parameter>

	            <parameter id="par_fc_err_desc">
	                <contents>
	                	<value type="infosource_value"  infosource="radius" endpointid="fc">_errDesc</value>
	                </contents>
	            </parameter>

	            <!-- Parametros de Fix Car FTTH ID_TV -->
	            <parameter id="par_fc_ftth_http_code" type="value">
	                <contents>
	                	<value type="infosource_value" infosource="radius" endpointid="fc_ftth">_httpCode</value>
	                </contents> 
	            </parameter>

	            <parameter id="par_fc_ftth_err_code">
	                <contents>
	                	<value type="infosource_value" infosource="radius" endpointid="fc_ftth">_errCode</value>
	                </contents>
	            </parameter>

	            <parameter id="par_fc_ftth_err_desc">
	                <contents>
	                	<value type="infosource_value"  infosource="radius" endpointid="fc_ftth">_errDesc</value>
	                </contents>
	            </parameter>

               <!-- Parametros de Fix Car IP Fija-->
              <parameter id="par_fc_cnr_http_code" type="value">
                  <contents>
                    <value type="infosource_value" infosource="radius" endpointid="fc_cnr">_httpCode</value>
                  </contents> 
              </parameter>

              <parameter id="par_fc_cnr_err_code">
                  <contents>
                    <value type="infosource_value" infosource="radius" endpointid="fc_cnr">_errCode</value>
                  </contents>
              </parameter>

              <parameter id="par_fc_cnr_err_desc">
                  <contents>
                    <value type="infosource_value"  infosource="radius" endpointid="fc_cnr">_errDesc</value>
                  </contents>
              </parameter>

               <!-- Parametros de Fix Car  IP DIN-->
               <!--DBC_03062021_INCHC_010_2_Se crea nueva acciÃ³n para cnr ip dinÃ¡mica-->
              <parameter id="par_fc_cnr_din_http_code" type="value">
                  <contents>
                    <value type="infosource_value" infosource="radius" endpointid="fc_cnr_din">_httpCode</value>
                  </contents> 
              </parameter>

              <parameter id="par_fc_cnr_din_err_code">
                  <contents>
                    <value type="infosource_value" infosource="radius" endpointid="fc_cnr_din">_errCode</value>
                  </contents>
              </parameter>

              <parameter id="par_fc_cnr_din_err_desc">
                  <contents>
                    <value type="infosource_value"  infosource="radius" endpointid="fc_cnr_din">_errDesc</value>
                  </contents>
              </parameter>
			  <!--JJSM 20210510 - INCP_101_2 - INICIO -->
			  <!-- Parametros de Fix Car voz enrutada -->
              <parameter id="par_fc_enrutada_http_code" type="value">
                  <contents>
                    <value type="infosource_value" infosource="radius" endpointid="fc_routedvoice">_httpCode</value>
                  </contents> 
              </parameter>

              <parameter id="par_fc_enrutada_err_code">
                  <contents>
                    <value type="infosource_value" infosource="radius" endpointid="fc_routedvoice">_errCode</value>
                  </contents>
              </parameter>

              <parameter id="par_fc_enrutada_err_desc">
                  <contents>
                    <value type="infosource_value"  infosource="radius" endpointid="fc_routedvoice">_errDesc</value>
                  </contents>
              </parameter>
			  <!--JJSM 20210510 - INCP_101_2 - FIN -->

	        <!-- Parametros de Eliminar Bloqueo Impago -->
	            <parameter id="par_ebi_http_code" type="value">
	                <contents>
	                	<value type="infosource_value"  infosource="radius" endpointid="ebi">_httpCode</value>
	                </contents> 
	            </parameter>

	            <parameter id="par_ebi_err_code">
	                <contents>
	                	<value type="infosource_value" infosource="radius" endpointid="ebi">_errCode</value>
	                </contents>
	            </parameter>

	            <parameter id="par_ebi_err_desc">
	                <contents>
	                	<value type="infosource_value"  infosource="radius" endpointid="ebi">_errDesc</value>
	                </contents>
	            </parameter>

              <!-- Parametros de Eliminar Bloqueo Impago CNR-->
              <parameter id="par_ebi_cnr_http_code" type="value">
                  <contents>
                    <value type="infosource_value"  infosource="radius" endpointid="ebi_cnr">_httpCode</value>
                  </contents> 
              </parameter>

              <parameter id="par_ebi_cnr_err_code">
                  <contents>
                    <value type="infosource_value" infosource="radius" endpointid="ebi_cnr">_errCode</value>
                  </contents>
              </parameter>

              <parameter id="par_ebi_cnr_err_desc">
                  <contents>
                    <value type="infosource_value"  infosource="radius" endpointid="ebi_cnr">_errDesc</value>
                  </contents>
              </parameter>

	        <!-- Parametros de Desnat -->
	            <parameter id="par_desnat_http_code" type="value">
	                <contents>
	                	<value type="infosource_value"  infosource="radius" endpointid="desnat">_httpCode</value>
	                </contents> 
	            </parameter>

	            <parameter id="par_desnat_err_code">
	                <contents>
	                	<value type="infosource_value" infosource="radius" endpointid="desnat">_errCode</value>
	                </contents>
	            </parameter>

	            <parameter id="par_desnat_err_desc">
	                <contents>
	                	<value type="infosource_value"  infosource="radius" endpointid="desnat">_errDesc</value>
	                </contents>
	            </parameter>

              <!--DBC_INCX_010_3_20210309_Nuevos CR y req VF Inicio parametros de endpoint acciones-->
              <!-- Parametros de Actnat -->
              <parameter id="par_actnat_http_code" type="value">
                  <contents>
                    <value type="infosource_value"  infosource="radius" endpointid="activar_nat">_httpCode</value>
                  </contents> 
              </parameter>

              <parameter id="par_actnat_err_code">
                  <contents>
                    <value type="infosource_value" infosource="radius" endpointid="activar_nat">_errCode</value>
                  </contents>
              </parameter>

              <parameter id="par_actnat_err_desc">
                  <contents>
                    <value type="infosource_value"  infosource="radius" endpointid="activar_nat">_errDesc</value>
                  </contents>
              </parameter>

              <!-- Parametros de ResetSession -->
              <parameter id="par_rstsession_http_code" type="value">
                  <contents>
                    <value type="infosource_value"  infosource="radius" endpointid="resetsession">_httpCode</value>
                  </contents> 
              </parameter>

              <parameter id="par_rstsession_err_code">
                  <contents>
                    <value type="infosource_value" infosource="radius" endpointid="resetsession">_errCode</value>
                  </contents>
              </parameter>

              <parameter id="par_rstsession_err_desc">
                  <contents>
                    <value type="infosource_value"  infosource="radius" endpointid="resetsession">_errDesc</value>
                  </contents>
              </parameter>
              <!--DBC_INCX_010_3_20210309_Nuevos CR y req VF Fin parametros de endpoint acciones-->
	        

        <!-- PARAMETROS DE MUESTRA EN TOPOLOGIA --> 


            <parameter id="par_datalogin" type="value">
                <contents>
                	<value type="parameter">par_snid_http_code</value>
                	<value type="value">_</value>
                	<value type="parameter">par_radius_uid</value>
                </contents>
                <sequence>
                  <operation type="replace_pattern">
                    <args><arg><value type="value">200_unknown@to@No encontrado</value></arg></args>
                  </operation>
                  <operation type="replace_pattern">
                    <args><arg><value type="value">200_@to@</value></arg></args>
                  </operation>
                  <operation type="replace_pattern">
                    <args><arg><value type="value">(50._.*)@to@Desconocido</value></arg></args>
                  </operation>
                  <operation type="replace_pattern">
                    <args><arg><value type="value">(401_.*)@to@Desconocido</value></arg></args>
                  </operation>
                  <operation type="replace_pattern">
                    <args><arg><value type="value">(404_.*)@to@Desconocido</value></arg></args>
                  </operation>
                </sequence>
            </parameter>

            <parameter id="par_datalogin_lowi" type="value">
                <contents>
                	<value type="parameter">par_snidlw_http_code</value>
                	<value type="value">_</value>
                	<value type="parameter">par_snidlw_data_login_for_comparison</value>
                </contents>
                <sequence>
                  <operation type="replace_pattern">
                    <args><arg><value type="value">200_unknown@to@No encontrado</value></arg></args>
                  </operation>
                  <operation type="replace_pattern">
                    <args><arg><value type="value">200_@to@</value></arg></args>
                  </operation>
                  <operation type="replace_pattern">
                    <args><arg><value type="value">(50._.*)@to@Desconocido</value></arg></args>
                  </operation>
                  <operation type="replace_pattern">
                    <args><arg><value type="value">(401_.*)@to@Desconocido</value></arg></args>
                  </operation>
                  <operation type="replace_pattern">
                    <args><arg><value type="value">(404_.*)@to@Desconocido</value></arg></args>
                  </operation>
                </sequence>
            </parameter>



        <!-- PARAMETROS DE Servicio_por_network_id -->

          <parameter id="par_snid_base_table" type="table" name="Datos en Radius">
				  <contents>
				  	<value type="infosource_table"  infosource="radius" endpointid="snid">0.parts.service.serviceSpecification.characteristicValue.</value>
				  </contents>
				  <sequence>
				  	<operation type="header_selector">
				  		<args><arg><value type="value">characteristicName;value</value></arg></args>
				  	</operation>
				  	<operation type="first_row">
				  		<args><arg><value type="value">2</value></arg></args>
				  	</operation>
            <operation type="add_header">
              <args><arg><value type="value">Parametro;valor</value></arg></args>
            </operation>
				  </sequence>
				</parameter>

				<parameter id="par_snid_error_table" type="table">
				  <contents>
				  	<value type="infosource_table" infosource="radius" endpointid="snid">.</value>
				  </contents>
				  <sequence>
				    <operation type="header_selector">
				    	<args><arg><value type="value">name;reasonCode;failure.text</value></arg></args>
				    </operation>
				    <operation type="transpose"/>
				  </sequence>
				</parameter>

				<parameter id="par_snid_error_name" type="value">
				  <contents>
				  	<value type="parameter">par_snid_error_table</value>
				  </contents>
				  <sequence>
				    <operation type="column_index">
				    	<args><arg><value type="value">1</value></arg></args>
				    </operation>
				    <operation type="column_equal">
				    	<args><arg><value type="value">name</value></arg></args>
				    </operation>
				    <operation type="column_selector">
				    	<args><arg><value type="value">2</value></arg></args>
				    </operation>
				  </sequence>
				</parameter>

				<parameter id="par_snid_failure_text" type="value">
				  <contents>
				  	<value type="parameter">par_snid_error_table</value>
				  </contents>
				  <sequence>
				  	<operation type="column_index">
				  		<args><arg><value type="value">1</value></arg></args>
				  	</operation>
				    <operation type="column_equal">
				    	<args><arg><value type="value">failure.text</value></arg></args>
				    </operation>
				    <operation type="column_selector">
				    	<args><arg><value type="value">2</value></arg></args>
				    </operation>
				  </sequence>
				</parameter>

				<parameter id="par_snid_error_reasoncode" type="value">
				  <contents>
				  	<value type="parameter">par_snid_error_table</value>
				  </contents>
				  <sequence>
				  	<operation type="column_index">
				  		<args><arg><value type="value">1</value></arg></args>
				  	</operation>
				    <operation type="column_equal">
				    	<args><arg><value type="value">reasonCode</value></arg></args>
				    </operation>
				    <operation type="column_selector">
				    	<args><arg><value type="value">2</value></arg></args>
				    </operation>
				  </sequence>
				</parameter>

				<parameter id="par_snid_service_id_base_table" type="table">
				  <contents>
				  	<value type="infosource_table" infosource="radius" endpointid="snid">0.parts.service.id.</value>
				  </contents>
				</parameter>

				<parameter id="par_snid_service_id" type="value">
				  <contents>
				  	<value type="parameter">par_snid_service_id_base_table</value>
				  </contents>
				  <sequence>
				  	<operation type="row_identifier">
				  		<args><arg><value type="value">SERVICEID</value></arg></args>
				  	</operation>
				    <operation type="column_selector">
				    	<args><arg><value type="value">3</value></arg></args>
				    </operation>
				  </sequence>
				</parameter>

				<parameter id="par_radius_uid" type="value" name="UID">
					<contents>
						<value type="parameter">par_snid_service_id_base_table</value>
					</contents>
					<sequence>
						<operation type="column_index">
					    	<args><arg><value type="value">2</value></arg></args>
					    </operation>
					    <operation type="column_equal">
					    	<args><arg><value type="value">UID</value></arg></args>
					    </operation>
						<operation type="column_selector">
							<args><arg><value type="value">3</value></arg></args>
						</operation>
					</sequence>
				</parameter>

				<parameter id="par_radius_ou" type="value" name="OU">
					<contents>
						<value type="parameter">par_snid_service_id_base_table</value>
					</contents>
					<sequence>
						<operation type="row_identifier">
							<args><arg><value type="value">OU</value></arg></args>
						</operation>
						<operation type="column_selector">
							<args><arg><value type="value">3</value></arg></args>
						</operation>
					</sequence>
				</parameter>

				<parameter id="par_radius_ip" type="value" name="Radius_IP">
				  <contents>
				  	<value type="parameter">par_snid_base_table</value>
				  </contents>
				  <sequence>
				    <operation type="row_identifier">
				    	<args><arg><value type="value">FRAMEDIPADDRESS</value></arg></args>
				    </operation>
				    <operation type="column_selector">
				    	<args><arg><value type="value">2</value></arg></args>
				    </operation>
				  </sequence>
				</parameter>

				<!--JJSM 20210323 - INCP_101 - INICIO  -->
				<parameter id="par_radius_framedroute" type="value" name="Radius_IP">
				  <contents>
				  	<value type="parameter">par_snid_base_table</value>
				  </contents>
				  <sequence>
				    <operation type="row_identifier">
				    	<args><arg><value type="value">FRAMEDROUTE</value></arg></args>
				    </operation>
				    <operation type="column_selector">
				    	<args><arg><value type="value">2</value></arg></args>
				    </operation>
				  </sequence>
				</parameter>
				<parameter id="par_radius_framedroute_prefix" type="value" name="Radius_IP">
				  <contents>
				  	<value type="parameter">par_radius_framedroute</value>
				  </contents>
				  <sequence>
					  <operation type="column_delimiter">
						<args><arg><value type="value"> </value></arg></args>
					  </operation>
					  <operation type="column_selector">
						<args><arg><value type="value">2</value></arg></args>
					  </operation>
				  </sequence>
				</parameter>
				<!--JJSM 20210323 - INCP_101 - FIN  -->

				<parameter id="par_radius_ip_intopology" type="value">
				  <contents>
				  	<value type="parameter">par_snid_http_code</value>
				  	<value type="value">_</value>
				  	<value type="parameter">par_radius_ip</value>
				  </contents>
				  <sequence>
				    <operation type="replace_pattern">
				    	<args><arg><value type="value">200_unknown@to@Desconocido</value></arg></args>
				    </operation>
				    <operation type="replace_pattern">
				    	<args><arg><value type="value">200_@to@</value></arg></args>
				    </operation>
				    <operation type="replace_pattern">
				    	<args><arg><value type="value">(50._.*)@to@Desconocido</value></arg></args>
				    </operation>
            <operation type="replace_pattern">
              <args><arg><value type="value">(401_.*)@to@Desconocido</value></arg></args>
            </operation>
            <operation type="replace_pattern">
              <args><arg><value type="value">(404_.*)@to@Desconocido</value></arg></args>
            </operation>
				  </sequence>
				</parameter>

        <parameter id="par_radius_ip_intopology_cm" type="value">
          <contents>
            <value type="parameter">par_snidhfc_http_code</value>
            <value type="value">_</value>
            <value type="parameter">par_radius_ip_cm</value>
          </contents>
          <sequence>
            <operation type="replace_pattern">
              <args><arg><value type="value">200_unknown@to@Desconocido</value></arg></args>
            </operation>
            <operation type="replace_pattern">
              <args><arg><value type="value">200_@to@</value></arg></args>
            </operation>
            <operation type="replace_pattern">
              <args><arg><value type="value">(50._.*)@to@Desconocido</value></arg></args>
            </operation>
                  <operation type="replace_pattern">
                    <args><arg><value type="value">(401_.*)@to@Desconocido</value></arg></args>
                  </operation>
                  <operation type="replace_pattern">
                    <args><arg><value type="value">(404_.*)@to@Desconocido</value></arg></args>
                  </operation>
          </sequence>
        </parameter>

				<parameter id="par_radius_datapwd" type="value" name="Radius_DataPwd">
				  <contents>
				  	<value type="parameter">par_snid_base_table</value>
				  </contents>
				  <sequence>
				    <operation type="row_identifier">
				    	<args><arg><value type="value">USERPASSWORD</value></arg></args>
				    </operation>
				    <operation type="column_selector">
				    	<args><arg><value type="value">2</value></arg></args>
				    </operation>
				  </sequence>
				</parameter>

				<parameter id="par_radius_ciscoavpair" type="value" name="Radius_Pool">
				  <contents>
				  	<value type="parameter">par_snid_base_table</value>
				  </contents>
				  <sequence>
				  	<operation type="row_identifier">
				  		<args><arg><value type="value">CISCOAVPAIR</value></arg></args>
				  	</operation>
				    <operation type="column_selector">
				    	<args><arg><value type="value">2</value></arg></args>
				    </operation>
				  </sequence>
				</parameter>
				  
				<parameter id="par_radius_pool" type="value" name="Pool en Radius">
				  <contents>
				  	<value type="parameter">par_radius_ciscoavpair</value>
				  </contents>
				  <sequence>
				  	<operation type="replace_pattern">
				    	<args><arg><value type="value">(ppp.*pool=)@to@</value></arg></args>
				    </operation>
				  	<operation type="remove_pattern">
				    	<args><arg><value type="value">ip:addr-pool=</value></arg></args>
				    </operation>
				  	<operation type="replace_pattern">
				    	<args><arg><value type="value">(ppp.*)@to@</value></arg></args>
				    </operation>
				    <operation type="replace_pattern">
				    	<args><arg><value type="value">(,.*)@to@</value></arg></args>
				    </operation>
				  </sequence>
				</parameter>

				<parameter id="par_radius_objectclass" type="value" name="OBJECTCLASS">
					<contents>
						<value type="parameter">par_snid_base_table</value>
					</contents>
					<sequence>
						<operation type="row_identifier">
							<args><arg><value type="value">OBJECTCLASS</value></arg></args>
						</operation>
						<operation type="column_selector">
							<args><arg><value type="value">2</value></arg></args>
						</operation>
					</sequence>
				</parameter>

				<parameter id="par_radius_subsc_prof_str" type="value" name="ALC-SUBSC-PROF-STR">
					<contents>
						<value type="parameter">par_snid_base_table</value>
					</contents>
					<sequence>
						<operation type="row_identifier">
							<args><arg><value type="value">ALC-SUBSC-PROF-STR</value></arg></args>
						</operation>
						<operation type="column_selector">
							<args><arg><value type="value">2</value></arg></args>
						</operation>
					</sequence>
				</parameter>

				<parameter id="par_radius_framedprotocol" type="value" name="FRAMEDPROTOCOL">
					<contents>
						<value type="parameter">par_snid_base_table</value>
					</contents>
					<sequence>
						<operation type="row_identifier">
							<args><arg><value type="value">FRAMEDPROTOCOL</value></arg></args>
						</operation>
						<operation type="column_selector">
							<args><arg><value type="value">2</value></arg></args>
						</operation>
					</sequence>
				</parameter>

				<parameter id="par_radius_netpass" type="value" name="NETPASS">
					<contents>
						<value type="parameter">par_snid_base_table</value>
					</contents>
					<sequence>
						<operation type="row_identifier">
							<args><arg><value type="value">NETPASS</value></arg></args>
						</operation>
						<operation type="column_selector">
							<args><arg><value type="value">2</value></arg></args>
						</operation>
					</sequence>
				</parameter>

				<parameter id="par_radius_description" type="value">
					<contents>
						<value type="infosource_value" infosource="data" endpointid="snid">0.parts.service.desc</value>
					</contents>
				</parameter>

				<parameter id="par_radius_servicetype" type="value">
					<contents>
						<value type="infosource_value" infosource="data" endpointid="snid">0.parts.service.type</value>
					</contents>
				</parameter>

			  <parameter id="par_radius_perfil_aux" type="value">
				  <contents>
				  	<value type="parameter">par_snid_base_table</value>
				  </contents>
				  <sequence>
				    <operation type="row_identifier">
				    	<args><arg><value type="value">ALC-SLA-PROF-STR</value></arg></args>
				    </operation>
				    <operation type="column_selector">
				    	<args><arg><value type="value">2</value></arg></args>
				    </operation>
				  </sequence>
				</parameter>

			  <parameter id="par_radius_perfil" type="value" name="Radius_perfil">
				  <contents>
				  	<value type="parameter">par_radius_perfil_aux</value>
				  </contents>
				  <sequence>
				    <operation type="replace_pattern">
				    	<args><arg><value type="value">unknown@to@VF CFHP_Default</value></arg></args>
				    </operation>
				  </sequence>
				</parameter>

				<parameter id="par_service_status">
					<contents>
						<value type="parameter" role="front">par_service_status</value>
					</contents>
				</parameter>

				<parameter id="par_service_substatus">
					<contents>
						<value type="parameter" role="front">par_service_substatus</value>
					</contents>
				</parameter>

	            <parameter id="par_ip_comparison_table" type="table">
	              <contents>
	              	<value type="value">IP de Radius,IP del cliente;</value>
	              	<value type="parameter">par_radius_ip</value>
	              	<value type="value">,</value>
	              	<value type="parameter" role="front">par_inet_ip_address</value>
	              </contents>
	              <sequence>
	                <operation type="row_delimiter">
	                	<args><arg><value type="value">;</value></arg></args>
	                </operation>
	                <operation type="column_delimiter">
	                	<args><arg><value type="value">,</value></arg></args>
	                </operation>
	              </sequence>
	            </parameter>

	            <parameter id="par_pwd_comparison_table" type="table">
	              <contents>
	              	<value type="value">ContraseÃ±a de Radius,ContraseÃ±a del cliente;</value>
	              	<value type="parameter">par_radius_datapwd</value>
	              	<value type="value">,</value>
	              	<value type="parameter" role="front">par_inet_data_password</value>
	              </contents>
	              <sequence>
	                <operation type="row_delimiter">
	                	<args><arg><value type="value">;</value></arg></args>
	                </operation>
	                <operation type="column_delimiter">
	                	<args><arg><value type="value">,</value></arg></args>
	                </operation>
	              </sequence>
	            </parameter>

	            <parameter id="par_pool_comparison_table" type="table">
	              <contents>
	              	<value type="value">Pool de Radius,Pool del Template;</value>
	              	<value type="parameter">par_radius_pool</value>
	              	<value type="value">,</value>
	              	<value type="parameter">par_template_pool</value>
	              </contents>
	              <sequence>
	                <operation type="row_delimiter">
	                	<args><arg><value type="value">;</value></arg></args>
	                </operation>
	                <operation type="column_delimiter">
	                	<args><arg><value type="value">,</value></arg></args>
	                </operation>
	              </sequence>
	            </parameter>

	            <parameter id="par_pool_nat_comparison_table" type="table">
	              <contents>
	              	<value type="value">Pool de Radius,Pool NAT del Template;</value>
	              	<value type="parameter">par_radius_pool</value>
	              	<value type="value">,</value>
	              	<value type="parameter">par_template_pool_nat</value>
	              </contents>
	              <sequence>
	                <operation type="row_delimiter">
	                	<args><arg><value type="value">;</value></arg></args>
	                </operation>
	                <operation type="column_delimiter">
	                	<args><arg><value type="value">,</value></arg></args>
	                </operation>
	              </sequence>
	            </parameter>

	            <parameter id="par_perfil_comparison_table" type="table">
	              <contents>
	              	<value type="value">Perfil de Radius,Perfil del Template;</value>
	              	<value type="parameter">par_radius_perfil</value>
	              	<value type="value">,</value>
	              	<value type="parameter">par_template_perfil</value>
	              </contents>
	              <sequence>
	                <operation type="row_delimiter">
	                	<args><arg><value type="value">;</value></arg></args>
	                </operation>
	                <operation type="column_delimiter">
	                	<args><arg><value type="value">,</value></arg></args>
	                </operation>
	              </sequence>
	            </parameter>

	            <parameter id="par_perfil_nat_comparison_table" type="table">
	              <contents>
	              	<value type="value">Perfil NAT de Radius,Perfil del Template;</value>
	              	<value type="parameter">par_radius_perfil</value>
	              	<value type="value">,</value>
	              	<value type="parameter">par_template_perfil_nat</value>
	              </contents>
	              <sequence>
	                <operation type="row_delimiter">
	                	<args><arg><value type="value">;</value></arg></args>
	                </operation>
	                <operation type="column_delimiter">
	                	<args><arg><value type="value">,</value></arg></args>
	                </operation>
	              </sequence>
	            </parameter>

              <!--Parametros de SnidHFC-->
              <parameter id="par_snid_base_table_cm" type="table" name="Datos en Radius">
                <contents>
                  <value type="infosource_table"  infosource="radius" endpointid="snidhfc">0.parts.service.serviceSpecification.characteristicValue.</value>
                </contents>
                <sequence>
                  <operation type="header_selector">
                    <args><arg><value type="value">characteristicName;value</value></arg></args>
                  </operation>
                  <operation type="first_row">
                    <args><arg><value type="value">2</value></arg></args>
                  </operation>
                  <operation type="add_header">
                    <args><arg><value type="value">Parametro;valor</value></arg></args>
                  </operation>
                </sequence>
              </parameter>

              <parameter id="par_snid_error_table_cm" type="table">
                <contents>
                  <value type="infosource_table" infosource="radius" endpointid="snidhfc">.</value>
                </contents>
                <sequence>
                  <operation type="header_selector">
                    <args><arg><value type="value">name;reasonCode;failure.text</value></arg></args>
                  </operation>
                  <operation type="transpose"/>
                </sequence>
              </parameter>

              <parameter id="par_snid_error_name_cm" type="value">
                <contents>
                  <value type="parameter">par_snid_error_table_cm</value>
                </contents>
                <sequence>
                  <operation type="column_index">
                    <args><arg><value type="value">1</value></arg></args>
                  </operation>
                  <operation type="column_equal">
                    <args><arg><value type="value">name</value></arg></args>
                  </operation>
                  <operation type="column_selector">
                    <args><arg><value type="value">2</value></arg></args>
                  </operation>
                </sequence>
              </parameter>

              <parameter id="par_snid_failure_text_cm" type="value">
                <contents>
                  <value type="parameter">par_snid_error_table_cm</value>
                </contents>
                <sequence>
                  <operation type="column_index">
                    <args><arg><value type="value">1</value></arg></args>
                  </operation>
                  <operation type="column_equal">
                    <args><arg><value type="value">failure.text</value></arg></args>
                  </operation>
                  <operation type="column_selector">
                    <args><arg><value type="value">2</value></arg></args>
                  </operation>
                </sequence>
              </parameter>

              <parameter id="par_snid_error_reasoncode_cm" type="value">
                <contents>
                  <value type="parameter">par_snid_error_table_cm</value>
                </contents>
                <sequence>
                  <operation type="column_index">
                    <args><arg><value type="value">1</value></arg></args>
                  </operation>
                  <operation type="column_equal">
                    <args><arg><value type="value">reasonCode</value></arg></args>
                  </operation>
                  <operation type="column_selector">
                    <args><arg><value type="value">2</value></arg></args>
                  </operation>
                </sequence>
              </parameter>

              <parameter id="par_radius_ip_cm" type="value" name="Radius_IP">
                <contents>
                  <value type="parameter">par_snid_base_table_cm</value>
                </contents>
                <sequence>
                  <operation type="row_identifier">
                    <args><arg><value type="value">FRAMEDIPADDRESS</value></arg></args>
                  </operation>
                  <operation type="column_selector">
                    <args><arg><value type="value">2</value></arg></args>
                  </operation>
                </sequence>
              </parameter>

              <parameter id="par_radius_datapwd_cm" type="value" name="Radius_DataPwd">
                <contents>
                  <value type="parameter">par_snid_base_table_cm</value>
                </contents>
                <sequence>
                  <operation type="row_identifier">
                    <args><arg><value type="value">USERPASSWORD</value></arg></args>
                  </operation>
                  <operation type="column_selector">
                    <args><arg><value type="value">2</value></arg></args>
                  </operation>
                </sequence>
              </parameter>

              <parameter id="par_radius_ciscoavpair_cm" type="value" name="Radius_Pool">
                <contents>
                  <value type="parameter">par_snid_base_table_cm</value>
                </contents>
                <sequence>
                  <operation type="row_identifier">
                    <args><arg><value type="value">CISCOAVPAIR</value></arg></args>
                  </operation>
                  <operation type="column_selector">
                    <args><arg><value type="value">2</value></arg></args>
                  </operation>
                </sequence>
              </parameter>

              <parameter id="par_radius_objectclass_cm" type="value" name="OBJECTCLASS">
                <contents>
                  <value type="parameter">par_snid_base_table_cm</value>
                </contents>
                <sequence>
                  <operation type="row_identifier">
                    <args><arg><value type="value">OBJECTCLASS</value></arg></args>
                  </operation>
                  <operation type="column_selector">
                    <args><arg><value type="value">2</value></arg></args>
                  </operation>
                </sequence>
              </parameter>

              <parameter id="par_radius_subsc_prof_str_cm" type="value" name="ALC-SUBSC-PROF-STR">
                <contents>
                  <value type="parameter">par_snid_base_table_cm</value>
                </contents>
                <sequence>
                  <operation type="row_identifier">
                    <args><arg><value type="value">ALC-SUBSC-PROF-STR</value></arg></args>
                  </operation>
                  <operation type="column_selector">
                    <args><arg><value type="value">2</value></arg></args>
                  </operation>
                </sequence>
              </parameter>

              <parameter id="par_radius_framedprotocol_cm" type="value" name="FRAMEDPROTOCOL">
                <contents>
                  <value type="parameter">par_snid_base_table_cm</value>
                </contents>
                <sequence>
                  <operation type="row_identifier">
                    <args><arg><value type="value">FRAMEDPROTOCOL</value></arg></args>
                  </operation>
                  <operation type="column_selector">
                    <args><arg><value type="value">2</value></arg></args>
                  </operation>
                </sequence>
              </parameter>

              <parameter id="par_radius_netpass_cm" type="value" name="NETPASS">
                <contents>
                  <value type="parameter">par_snid_base_table_cm</value>
                </contents>
                <sequence>
                  <operation type="row_identifier">
                    <args><arg><value type="value">NETPASS</value></arg></args>
                  </operation>
                  <operation type="column_selector">
                    <args><arg><value type="value">2</value></arg></args>
                  </operation>
                </sequence>
              </parameter>

              <parameter id="par_radius_description_cm" type="value">
                <contents>
                  <value type="infosource_value" infosource="radius" endpointid="snidhfc">0.parts.service.desc</value>
                </contents>
              </parameter>

              <parameter id="par_radius_servicetype_cm" type="value">
                <contents>
                  <value type="infosource_value" infosource="radius" endpointid="snidhfc">0.parts.service.type</value>
                </contents>
              </parameter>

              <parameter id="par_radius_perfil_aux_cm" type="value">
                <contents>
                  <value type="parameter">par_snid_base_table_cm</value>
                </contents>
                <sequence>
                  <operation type="row_identifier">
                    <args><arg><value type="value">ALC-SLA-PROF-STR</value></arg></args>
                  </operation>
                  <operation type="column_selector">
                    <args><arg><value type="value">2</value></arg></args>
                  </operation>
                </sequence>
              </parameter>

              <parameter id="par_radius_perfil_cm" type="value" name="Radius_perfil">
                <contents>
                  <value type="parameter">par_radius_perfil_aux_cm</value>
                </contents>
                <sequence>
                  <operation type="replace_pattern">
                    <args><arg><value type="value">unknown@to@VF CFHP_Default</value></arg></args>
                  </operation>
                </sequence>
              </parameter>

              <parameter id="par_radius_pool_cm" type="value" name="Pool en Radius">
                <contents>
                  <value type="parameter">par_radius_ciscoavpair_cm</value>
                </contents>
                <sequence>
                  <operation type="replace_pattern">
                    <args><arg><value type="value">(ppp.*pool=)@to@</value></arg></args>
                  </operation>
                  <operation type="remove_pattern">
                    <args><arg><value type="value">ip:addr-pool=</value></arg></args>
                  </operation>
                  <operation type="replace_pattern">
                    <args><arg><value type="value">(ppp.*)@to@</value></arg></args>
                  </operation>
                  <operation type="replace_pattern">
                    <args><arg><value type="value">(,.*)@to@</value></arg></args>
                  </operation>
                  <!--<operation type="remove_pattern">
                    <args><arg><value type="value">(,ip\:inacl.*)</value></arg></args>
                  </operation>-->
                  <!--<operation type="remove_pattern">
                    <args><arg><value type="value">ip:addr-pool=</value></arg></args>
                  </operation>
                  <operation type="remove_pattern">
                    <args><arg><value type="value">ppp:NAs-Port-Type=Virtual</value></arg></args>
                  </operation>
                  <operation type="remove_pattern">
                    <args><arg><value type="value">ip:inacl=125</value></arg></args>
                  </operation>
                  <operation type="remove_pattern">
                    <args><arg><value type="value">,</value></arg></args>
                  </operation>-->
                </sequence>
              </parameter>

	            <parameter id="par_inet_ip_address_front" type="value">
	            	<contents>
	            		<value type="parameter" role="front">par_inet_ip_address</value>
	            	</contents>
	            </parameter>

	            <parameter id="par_inet_ip_address_front_nunknown" type="value">
	            	<contents>
	            		<value type="parameter">par_inet_ip_address_front</value>
	            	</contents>
	            	<sequence>
	            		<operation type="remove_pattern">
	            			<args><arg><value type="value">unknown</value></arg></args>
	            		</operation>
	            	</sequence>
	            </parameter>
	            <!--DBC se contemplan correcciones en inet-->
	            <parameter id="par_inet_ip_address_front_ftth" type="value">
	            	<contents>
	            		<value type="parameter" role="inet">par_gsip_oip_tv_ip_address_final2</value>
	            	</contents>
	            </parameter>

              <!--DAS2020092417 - INCF_019_2 - INICIO-->
              <!--Antes:<parameter id="par_id_tv_front_ftth" type="value">
                <contents>
                  <value type="parameter" role="front">par_id_tv</value>
                </contents>
              </parameter>-->
	            <parameter id="par_id_tv_front_ftth" type="value">
	            	<contents>
	            		<value type="parameter" role="inet">par_gsip_oip_tv_ip_address_final2</value>
	            	</contents>
                <sequence>
                  <!--Si la IP es igual que la que se consigue mediante serviceID+T, se sustituye por el valor de serviceID+T. En el caso de tener una IP final desconocida, este "reaplce_pattern" dejarÃ¡ como valor por defecto el serviceID+T para el Fix_CAR de FTTH al detectar que el "unknown" es igual a "unknown"-->
                  <operation type="replace_pattern">
                    <args>
                      <arg>
                        <value type="parameter" role="inet">par_gsip_oip_tv_ip_address</value>
                        <value type="value">@to@</value>
                        <value type="parameter" role="front">par_grc_service_id</value><value type="value">T</value>
                      </arg>
                    </args>
                  </operation>
                  <!--Si la IP es igual que la que se consigue mediante el coGuid (ID_TV), se sustituye por el valor del coGuid-->
                  <operation type="replace_pattern">
                    <args>
                      <arg>
                        <value type="parameter" role="inet">par_gsip_oip_tv_ip_address_coguid</value>
                        <value type="value">@to@</value>
                        <value type="parameter" role="front">par_id_tv</value>
                      </arg>
                    </args>
                  </operation>
                  <!--DAS2020100617 - INCF_019_2 - INICIO-->
                  <operation type="replace_pattern">
                    <args>
                      <arg>
                        <value type="parameter" role="cpe">par_cpcpe_external_ip_address</value>
                        <value type="value">@to@</value>
                        <value type="parameter" role="front">par_grc_service_id</value><value type="value">T</value>
                      </arg>
                    </args>
                  </operation>
                  <!--DAS2020100617 - INCF_019_2 - FIN-->
                </sequence>
	            </parameter>
              <!--DAS2020092417 - INCF_019_2 - FIN-->

	            <parameter id="par_inet_data_password_front" type="value">
	            	<contents>
	            		<value type="parameter" role="front">par_inet_data_password</value>
	            	</contents>
	            </parameter>			

        <!-- PARAMETROS DE Servicio_por_network_id (Lowi)-->

				<parameter id="par_snidlw_base_table" type="table">
					<contents>
						<value type="infosource_table" infosource="radius" endpointid="snidlw">0.parts.service.</value>
					</contents>
				</parameter>

				<parameter id="par_snidlw_error_table" type="table">
					<contents>
						<value type="infosource_table" infosource="radius" endpointid="snidlw">.</value>
					</contents>
					<sequence>
						<operation type="header_selector">
							<args><arg><value type="value">name;reasonCode;message</value></arg></args>
						</operation>
						<operation type="transpose"/>
					</sequence>
				</parameter>

				<parameter id="par_snidlw_characteristic_table" type="table">
					<contents>
						<value type="parameter">par_snidlw_base_table</value>
					</contents>
					<sequence>
						<operation type="header_selector">
							<args><arg><value type="value">serviceSpecification.characteristicValue.characteristicName;serviceSpecification.characteristicValue.value</value></arg></args>
						</operation>
						<operation type="first_row">
							<args><arg><value type="value">2</value></arg></args>
						</operation>
						<operation type="column_index">
							<args><arg><value type="value">1</value></arg></args>
						</operation>
						<operation type="unique_rows"/>
					</sequence>
				</parameter>

				<parameter id="par_snidlw_resource_table" type="table">
					<contents>
						<value type="parameter">par_snidlw_base_table</value>
					</contents>
					<sequence>
						<operation type="header_selector">
							<args><arg><value type="value">resource.id.schemeName;resource.id.value</value></arg></args>
						</operation>
						<operation type="first_row">
							<args><arg><value type="value">2</value></arg></args>
						</operation>
						<operation type="unique_rows"/>
						<operation type="row_excluder">
							<args><arg><value type="value">unknown</value></arg></args>
						</operation>
					</sequence>
				</parameter>

				<parameter id="par_snidlw_service_id_base_table" type="table">
					<contents>
						<value type="parameter">par_snidlw_base_table</value>
					</contents>
					<sequence>
						<operation type="header_selector">
							<args><arg><value type="value">id.schemeName;id.value</value></arg></args>
						</operation>
						<operation type="first_row">
							<args><arg><value type="value">2</value></arg></args>
						</operation>
						<operation type="unique_rows"/>
						<operation type="row_excluder">
							<args><arg><value type="value">unknown</value></arg></args>
						</operation>
					</sequence>
				</parameter>

				<parameter id="par_snidlw_status" type="value">
					<contents>
						<value type="parameter">par_snidlw_base_table</value>
					</contents>
					<sequence>
						<operation type="header_selector">
							<args><arg><value type="value">status</value></arg></args>
						</operation>
						<operation type="first_row">
							<args><arg><value type="value">2</value></arg></args>
						</operation>
						<operation type="unique_rows"/>
					</sequence>
				</parameter>

				<parameter id="par_snidlw_template" type="value">
					<contents>
						<value type="parameter">par_snidlw_characteristic_table</value>
					</contents>
					<sequence>
						<operation type="column_index">
							<args><arg><value type="value">1</value></arg></args>
						</operation>
						<operation type="column_equal">
							<args><arg><value type="value">TEMPLATE</value></arg></args>
						</operation>
						<operation type="column_selector">
							<args><arg><value type="value">2</value></arg></args>
						</operation>
					</sequence>
				</parameter>

				<!-- Hay que concatenar "@lowi" al ID en la comprobaciÃ³n -->
				<parameter id="par_snidlw_data_login" type="value">
					<contents>
						<value type="parameter">par_snidlw_characteristic_table</value>
					</contents>
					<sequence>
						<operation type="column_index">
							<args><arg><value type="value">1</value></arg></args>
						</operation>
						<operation type="column_equal">
							<args><arg><value type="value">NetworkId</value></arg></args>
						</operation>
						<operation type="column_selector">
							<args><arg><value type="value">2</value></arg></args>
						</operation>
					</sequence>
				</parameter>

				<!--Se necesita aÃ±adir la terminaciÃ³n para la comparaciÃ³n con inventario.-->
				<!-- JJSM 20220503 - CON_049 - INICIO -->
				<parameter id="par_marca_formateado" type="value">
					<contents>
						<value type="value">#</value>
						<value type="parameter" role="front">par_marca</value>
					</contents>
                    <sequence>
                      <operation type="replace_pattern">
                        <args><arg><value type="value">^#(Fi Network|Esparta)$@to@@vee</value></arg></args>
                      </operation>
                      <operation type="replace_pattern">
                          <args><arg><value type="value">^#.{0,}$@to@@lowi</value></arg></args>
                      </operation>
                    </sequence>
				</parameter>
				<parameter id="par_snidlw_data_login_for_comparison" type="value">
					<contents>
						<value type="parameter">par_snidlw_data_login</value>
						<value type="parameter">par_marca_formateado</value>
					</contents>
				</parameter>
				<!-- JJSM 20220503 - CON_049 - FIN -->
				<parameter id="par_snidlw_data_password" type="value">
					<contents>
						<value type="parameter">par_snidlw_characteristic_table</value>
					</contents>
					<sequence>
						<operation type="column_index">
							<args><arg><value type="value">1</value></arg></args>
						</operation>
						<operation type="column_equal">
							<args><arg><value type="value">LOGIN_PWD</value></arg></args>
						</operation>
						<operation type="column_selector">
							<args><arg><value type="value">2</value></arg></args>
						</operation>
					</sequence>
				</parameter>

				<parameter id="par_snidlw_error_message" type="value">
					<contents>
						<value type="parameter">par_snidlw_error_table</value>
					</contents>
					<sequence>
						<operation type="column_index">
							<args><arg><value type="value">1</value></arg></args>
						</operation>
						<operation type="column_equal">
							<args><arg><value type="value">message</value></arg></args>
						</operation>
						<operation type="column_selector">
							<args><arg><value type="value">2</value></arg></args>
						</operation>
					</sequence>
				</parameter>

				<parameter id="par_snidlw_service_id" type="value">
				  <contents>
				    <value type="parameter">par_snidlw_service_id_base_table</value>
				  </contents>
				  <sequence>
				    <operation type="row_identifier">
				      <args><arg><value type="value">ServiceId</value></arg></args>
				    </operation>
				    <operation type="column_selector">
				      <args><arg><value type="value">3</value></arg></args>
				    </operation>
				  </sequence>
				</parameter>
				
				<parameter id="par_snidlw_external_id" type="value">
				  <contents>
				    <value type="parameter">par_snidlw_service_id_base_table</value>
				  </contents>
				  <sequence>
				    <operation type="row_identifier">
				      <args><arg><value type="value">ExternalId</value></arg></args>
				    </operation>
				    <operation type="column_selector">
				      <args><arg><value type="value">3</value></arg></args>
				    </operation>
				  </sequence>
				</parameter>

        <!-- parametros llamada Servicio_por_network_id_CNR (HFC)-->
         <parameter id="par_snid_hfc_table_base" type="table">
           <contents>
             <value type="infosource_table"  infosource="radius" endpointid="snidhfc">.</value>
           </contents>
           <sequence>
             <operation type="first_column">
               <args><arg><value type="value">3</value></arg></args>
             </operation>
             <operation type="first_row">
               <args><arg><value type="value">2</value></arg></args>
             </operation>
           </sequence>
        </parameter>

        <!-- CLIENT_CLASS_NAME -->
         <parameter id="par_snid_hfc_client_class_name" type="value">
           <contents>
             <value type="parameter">par_snid_hfc_table_base</value>
           </contents>
           <sequence>
             <operation type="column_index">
               <args><arg><value type="value">1</value></arg></args>
             </operation>
             <operation type="column_equal">
               <args><arg><value type="value">CLIENT_CLASS_NAME</value></arg></args>
             </operation>
             <operation type="column_selector">
               <args><arg><value type="value">2</value></arg></args>
             </operation>
           </sequence>
        </parameter>

        <!-- ADD_TO_ENVIRONMENT_DICTIONARY -->
         <parameter id="par_snid_hfc_add_to_environment_dictionary" type="value">
           <contents>
             <value type="parameter">par_snid_hfc_table_base</value>
           </contents>
           <sequence>
             <operation type="column_index">
               <args><arg><value type="value">1</value></arg></args>
             </operation>
             <operation type="column_equal">
               <args><arg><value type="value">ADD_TO_ENVIRONMENT_DICTIONARY</value></arg></args>
             </operation>
             <operation type="column_selector">
               <args><arg><value type="value">2</value></arg></args>
             </operation>
           </sequence>
        </parameter>

        <!-- DOMAIN_NAME -->
         <parameter id="par_snid_hfc_domain_name" type="value">
           <contents>
             <value type="parameter">par_snid_hfc_table_base</value>
           </contents>
           <sequence>
             <operation type="column_index">
               <args><arg><value type="value">1</value></arg></args>
             </operation>
             <operation type="column_equal">
               <args><arg><value type="value">DOMAIN_NAME</value></arg></args>
             </operation>
             <operation type="column_selector">
               <args><arg><value type="value">2</value></arg></args>
             </operation>
           </sequence>
        </parameter>

        <!-- EMBEDDED_POLICY -->
         <parameter id="par_snid_hfc_embedbed_policy" type="value">
           <contents>
             <value type="parameter">par_snid_hfc_table_base</value>
           </contents>
           <sequence>
             <operation type="column_index">
               <args><arg><value type="value">1</value></arg></args>
             </operation>
             <operation type="column_equal">
               <args><arg><value type="value">EMBEDDED_POLICY</value></arg></args>
             </operation>
             <operation type="column_selector">
               <args><arg><value type="value">2</value></arg></args>
             </operation>
           </sequence>
        </parameter>

        <!-- DEFAULT_VPN -->
         <parameter id="par_snid_hfc_default_vpn" type="value">
           <contents>
             <value type="parameter">par_snid_hfc_table_base</value>
           </contents>
           <sequence>
             <operation type="column_index">
               <args><arg><value type="value">1</value></arg></args>
             </operation>
             <operation type="column_equal">
               <args><arg><value type="value">DEFAULT_VPN</value></arg></args>
             </operation>
             <operation type="column_selector">
               <args><arg><value type="value">2</value></arg></args>
             </operation>
           </sequence>
        </parameter>

        <!-- UNAUTHENTICATED_CLIENT_CLASS_NAME -->
         <parameter id="par_snid_hfc_unauthenticated_client_class_name" type="value">
           <contents>
             <value type="parameter">par_snid_hfc_table_base</value>
           </contents>
           <sequence>
             <operation type="column_index">
               <args><arg><value type="value">1</value></arg></args>
             </operation>
             <operation type="column_equal">
               <args><arg><value type="value">UNAUTHENTICATED_CLIENT_CLASS_NAME</value></arg></args>
             </operation>
             <operation type="column_selector">
               <args><arg><value type="value">2</value></arg></args>
             </operation>
           </sequence>
        </parameter>

        <!-- SELECTION_CRITERIA -->
         <parameter id="par_snid_hfc_selection_criteria" type="value">
           <contents>
             <value type="parameter">par_snid_hfc_table_base</value>
           </contents>
           <sequence>
             <operation type="column_index">
               <args><arg><value type="value">1</value></arg></args>
             </operation>
             <operation type="column_equal">
               <args><arg><value type="value">SELECTION_CRITERIA</value></arg></args>
             </operation>
             <operation type="column_selector">
               <args><arg><value type="value">2</value></arg></args>
             </operation>
           </sequence>
        </parameter>

        <!-- USER_DEFINED -->
         <parameter id="par_snid_hfc_user_defined" type="value">
           <contents>
             <value type="parameter">par_snid_hfc_table_base</value>
           </contents>
           <sequence>
             <operation type="column_index">
               <args><arg><value type="value">1</value></arg></args>
             </operation>
             <operation type="column_equal">
               <args><arg><value type="value">USER_DEFINED</value></arg></args>
             </operation>
             <operation type="column_selector">
               <args><arg><value type="value">2</value></arg></args>
             </operation>
           </sequence>
        </parameter>

        <!-- HOST_NAME -->
         <parameter id="par_snid_hfc_host_name" type="value">
           <contents>
             <value type="parameter">par_snid_hfc_table_base</value>
           </contents>
           <sequence>
             <operation type="column_index">
               <args><arg><value type="value">1</value></arg></args>
             </operation>
             <operation type="column_equal">
               <args><arg><value type="value">HOST_NAME</value></arg></args>
             </operation>
             <operation type="column_selector">
               <args><arg><value type="value">2</value></arg></args>
             </operation>
           </sequence>
        </parameter>

        <!-- OVERRIDE_VPN -->
         <parameter id="par_snid_override_vpn" type="value">
           <contents>
             <value type="parameter">par_snid_hfc_table_base</value>
           </contents>
           <sequence>
             <operation type="column_index">
               <args><arg><value type="value">1</value></arg></args>
             </operation>
             <operation type="column_equal">
               <args><arg><value type="value">OVERRIDE_VPN</value></arg></args>
             </operation>
             <operation type="column_selector">
               <args><arg><value type="value">2</value></arg></args>
             </operation>
           </sequence>
        </parameter>

        <!-- SELECTION_CRITERIA_EXCLUDED -->
         <parameter id="par_snid_hfc_selection_criteria_excluded" type="value">
           <contents>
             <value type="parameter">par_snid_hfc_table_base</value>
           </contents>
           <sequence>
             <operation type="column_index">
               <args><arg><value type="value">1</value></arg></args>
             </operation>
             <operation type="column_equal">
               <args><arg><value type="value">SELECTION_CRITERIA_EXCLUDED</value></arg></args>
             </operation>
             <operation type="column_selector">
               <args><arg><value type="value">2</value></arg></args>
             </operation>
           </sequence>
        </parameter>

        <!-- POLICY_NAME -->
         <parameter id="par_snid_hfc_policy_name" type="value">
           <contents>
             <value type="parameter">par_snid_hfc_table_base</value>
           </contents>
           <sequence>
             <operation type="column_index">
               <args><arg><value type="value">1</value></arg></args>
             </operation>
             <operation type="column_equal">
               <args><arg><value type="value">POLICY_NAME</value></arg></args>
             </operation>
             <operation type="column_selector">
               <args><arg><value type="value">2</value></arg></args>
             </operation>
           </sequence>
        </parameter>
        <!-- OVER_LIMIT_CLIENT_CLASS_NAME -->
         <parameter id="par_snid_hfc_over_limit_client_class_name" type="value">
           <contents>
             <value type="parameter">par_snid_hfc_table_base</value>
           </contents>
           <sequence>
             <operation type="column_index">
               <args><arg><value type="value">1</value></arg></args>
             </operation>
             <operation type="column_equal">
               <args><arg><value type="value">OVER_LIMIT_CLIENT_CLASS_NAME</value></arg></args>
             </operation>
             <operation type="column_selector">
               <args><arg><value type="value">2</value></arg></args>
             </operation>
           </sequence>
        </parameter>

        <!-- AUTHENTICATE_UNTIL -->
         <parameter id="par_snid_hfc_authenticate_until" type="value">
           <contents>
             <value type="parameter">par_snid_hfc_table_base</value>
           </contents>
           <sequence>
             <operation type="column_index">
               <args><arg><value type="value">1</value></arg></args>
             </operation>
             <operation type="column_equal">
               <args><arg><value type="value">AUTHENTICATE_UNTIL</value></arg></args>
             </operation>
             <operation type="column_selector">
               <args><arg><value type="value">2</value></arg></args>
             </operation>
           </sequence>
        </parameter>



		<!-- Radius Logs del Usuario -->

        <!--DCL20210428 - INC_419 - INICIO Se comenta ya que al hacer esta incidencia me he encontrado en que en todos los casos se recogia mal el valor y se crea uno nuevo

				<parameter id="par_rlu_data" name="Radius Logs del Usuario" type="table">
					<contents>
						<value type="infosource_table" infosource="radius" endpointid="rlu">parts.attachment.id.</value>
					</contents>
					<sequence>
						<operation type="header_selector">
							<args><arg><value type="value">parts.attachment.id.schemeName;parts.attachment.id.value</value></arg></args>
						</operation>
						<operation type="column_index">
							<args><arg><value type="value">1</value></arg></args>
						</operation>
						<operation type="column_equal">
							<args><arg><value type="value">resultado</value></arg></args>
						</operation>
						<operation type="column_selector">
							<args><arg><value type="value">2</value></arg></args>
						</operation>
					    <operation type="row_delimiter">
					      <args><arg><value type="value"><![CDATA[ <br> ]]></value></arg></args>
					    </operation>
					    <operation type="first_row">
					    	<args><arg><value type="value">2</value></arg></args>
					    </operation>
					</sequence>
				</parameter>
        DCL20210428 - INC_419 - FIn -->

        <!--DCL20210428 - INC_419 - INICIO - es de tipo tabla en primera instancia ya que se espera que llegue mas de 1 log-->
        <parameter id="par_rlu_data" name="Radius Logs del Usuario" type="table">
          <contents>
            <value type="infosource_table" infosource="radius" endpointid="rlu">parts.attachment.</value>
          </contents>
          <sequence>
             <operation type="first_row">
                <args><arg><value type="value">2</value></arg></args>
              </operation>
            <operation type="first_column">
                <args><arg><value type="value">3</value></arg></args>
              </operation>
           <operation type="column_equal">
                <args><arg><value type="value">resultado</value></arg></args>
              </operation>
            <operation type="column_selector">
                <args><arg><value type="value">2</value></arg></args>
              </operation>
          </sequence>
        </parameter>
        <!--DCL20210428 - INC_419 - FIN -->


        <!--Parametros de front para xDSL AI Voz Enrutada--><!--DAS20210326-->

        <parameter id="par_front_access_type" type="value">
          <contents>
            <value type="parameter" role="front">par_access_type</value>
          </contents>
        </parameter>

        <parameter id="par_front_grc_voip_ims" type="value">
          <contents>
            <value type="parameter" role="front">par_grc_voip_ims</value>
          </contents>
        </parameter>

        <!-- PCA20210421 - INCI_048 - INICIO -->
        <parameter id="par_snidhfc_ciscoavpair" type="value" name="Radius_Pool">
          <contents>
            <value type="parameter">par_snid_base_table_cm</value>
          </contents>
          <sequence>
            <operation type="row_identifier">
              <args><arg><value type="value">CISCOAVPAIR</value></arg></args>
            </operation>
            <operation type="column_selector">
              <args><arg><value type="value">2</value></arg></args>
            </operation>
          </sequence>
        </parameter>
        <!-- PCA20210421 - INCI_048 - FIN -->
	            
        <!-- PCA20210909 - INC000043991833 - INICIO -->				
				<parameter id="par_grc_service_id_front">
					<contents>
					  <value type="parameter" role="front">par_grc_service_id</value>
					</contents>
				  </parameter>
				<!-- PCA20210909 - INC000043991833 - INICIO -->

        <!-- PCA20210909 - INC000043991833 - INICIO -->				
				<parameter id="par_grc_service_id_front">
					<contents>
					  <value type="parameter" role="front">par_grc_service_id</value>
					</contents>
				  </parameter>
				<!-- PCA20210909 - INC000043991833 - INICIO -->

        <!--CCA20221111 - INC000059698088 - INICIO-->
        <parameter id="par_front_mta_sip_access_id" type="value">
            <contents>
                <value type="parameter" role="front">par_mta_sip_access_id</value>
            </contents>
        </parameter>

        <parameter id="par_front_hfc_access_accessprofile_aux" type="value">
            <contents>
                <value type="parameter" role="front">par_hfc_access_accessprofile_aux</value>
            </contents>
        </parameter>
        <!--CCA20221111 - INC000059698088 - FIN-->

    </parameters>

    <checks>
    	<!-- CHECKS DE RESPUESTA DE ENDPOINTS -->
          <!-- Checks de respuesta de Servicio_por_network_id -->
            <check id="chk_snid_err_code_ok">
            	<parameter>par_snid_err_code</parameter>
            	<result>
            		<expr type="and">
                  <operation type="equal">
                  	<args><arg><value type="value">0</value></arg></args>
                  </operation>
                </expr>
            	</result>
            </check>
            <check id="chk_snid_http_code_ok">
            	<parameter>par_snid_http_code</parameter>
            	<result>
            		<expr type="and">
                  <operation type="greater_or_equal">
                  	<args><arg><value type="value">200</value></arg></args>
                  </operation>
                  <operation type="lower">
                  	<args><arg><value type="value">300</value></arg></args>
                  </operation>
                </expr>
            	</result>
            </check>
            <check id="chk_snid_http_code_eq500">
            	<parameter>par_snid_http_code</parameter>
            	<result>
            		<expr type="and">
                  <operation type="equal">
                  	<args><arg><value type="value">500</value></arg></args>
                  </operation>
                </expr>
            	</result>
            </check>
			<!-- Checks de respuesta de Servicio_por_network_id (Lowi) -->
            <check id="chk_snidlw_err_code_ok">
            	<parameter>par_snidlw_err_code</parameter>
            	<result>
            		<expr type="and">
                  <operation type="equal">
                  	<args><arg><value type="value">0</value></arg></args>
                  </operation>
                </expr>
            	</result>
            </check>
            <check id="chk_snidlw_http_code_ok">
            	<parameter>par_snidlw_http_code</parameter>
            	<result>
            		<expr type="and">
                  <operation type="greater_or_equal">
                  	<args><arg><value type="value">200</value></arg></args>
                  </operation>
                  <operation type="lower">
                  	<args><arg><value type="value">300</value></arg></args>
                  </operation>
                </expr>
            	</result>
            </check>
            <check id="chk_snidlw_http_code_eq500">
            	<parameter>par_snidlw_http_code</parameter>
            	<result>
            		<expr type="and">
                  <operation type="equal">
                  	<args><arg><value type="value">500</value></arg></args>
                  </operation>
                </expr>
            	</result>
            </check>

            <!-- Checks de respuesta de Servicio_por_network_id (hfc) -->
            <check id="chk_snidhfc_err_code_ok">
              <parameter>par_snidhfc_err_code</parameter>
              <result>
                <expr type="and">
                  <operation type="equal">
                    <args><arg><value type="value">0</value></arg></args>
                  </operation>
                </expr>
              </result>
            </check>
            <check id="chk_snidhfc_http_code_ok">
              <parameter>par_snidhfc_http_code</parameter>
              <result>
                <expr type="and">
                  <operation type="greater_or_equal">
                    <args><arg><value type="value">200</value></arg></args>
                  </operation>
                  <operation type="lower">
                    <args><arg><value type="value">300</value></arg></args>
                  </operation>
                </expr>
              </result>
            </check>
            <check id="chk_snidhfc_http_code_eq500">
              <parameter>par_snidhfc_http_code</parameter>
              <result>
                <expr type="and">
                  <operation type="equal">
                    <args><arg><value type="value">500</value></arg></args>
                  </operation>
                </expr>
              </result>
            </check>

            <!-- PCA20210421 - INCI_048 - INICIO -->
            <check id="chk_snidhfc_no_impago">
              <parameter>par_snidhfc_ciscoavpair</parameter>
              <result>
                <expr type="and">
                  <operation type="not_contains">
                    <args><arg><value type="value">ip:inacl=125</value></arg></args>
                  </operation>
                </expr>
              </result>
            </check>
            <!-- PCA20210421 - INCI_048 - FIN -->

    		<!-- Checks de respuesta de Radius_Logs_del_usuario -->
            <check id="chk_rlu_err_code_ok">
            	<parameter>par_rlu_err_code</parameter>
            	<result>
            		<expr type="and">
                  <operation type="equal">
                  	<args><arg><value type="value">0</value></arg></args>
                  </operation>
                </expr>
            	</result>
            </check>
            <check id="chk_rlu_http_code_ok">
            	<parameter>par_rlu_http_code</parameter>
            	<result>
            		<expr type="and">
                  		<operation type="greater_or_equal">
                  			<args><arg><value type="value">200</value></arg></args>
                  		</operation>
                  		<operation type="lower">
                  			<args><arg><value type="value">300</value></arg></args>
                  		</operation>
                	</expr>
            	</result>
            </check>

            <check id="chk_rlu_err_code_notok">
            	<parameter>par_rlu_err_code</parameter>
            	<result>
            		<expr type="and">
                  <operation type="not_equal">
                  	<args><arg><value type="value">0</value></arg></args>
                  </operation>
                </expr>
            	</result>
            </check>
            <check id="chk_rlu_http_code_notok">
            	<parameter>par_rlu_http_code</parameter>
            	<result>
                <!-- DEF20221201 INC000060904772 -->
            		<expr type="or">
                  <operation type="lower">
                    <args><arg><value type="value">200</value></arg></args>
                  </operation>
                  <operation type="greater_or_equal">
                    <args><arg><value type="value">300</value></arg></args>
                  </operation>
                </expr>
            	</result>
            </check>

          <!-- Checks de respuesta de Fix CAR -->
            <check id="chk_fc_err_code_ok">
            	<parameter>par_fc_err_code</parameter>
            	<result>
            		<expr type="and">
                  <operation type="equal">
                  	<args><arg><value type="value">0</value></arg></args>
                  </operation>
                </expr>
            	</result>
            </check>
            <check id="chk_fc_http_code_ok">
            	<parameter>par_fc_http_code</parameter>
            	<result>
            		<expr type="and">
                  		<operation type="greater_or_equal">
                  			<args><arg><value type="value">200</value></arg></args>
                  		</operation>
                  		<operation type="lower">
                  			<args><arg><value type="value">300</value></arg></args>
                  		</operation>
                	</expr>
            	</result>
            </check>

            <!-- Checks de respuesta de Fix CAR FTTH -->
            <check id="chk_fc_ftth_err_code_ok">
            	<parameter>par_fc_ftth_err_code</parameter>
            	<result>
            		<expr type="and">
                  <operation type="equal">
                  	<args><arg><value type="value">0</value></arg></args>
                  </operation>
                </expr>
            	</result>
            </check>
            <check id="chk_fc_ftth_http_code_ok">
            	<parameter>par_fc_ftth_http_code</parameter>
            	<result>
            		<expr type="and">
                  		<operation type="greater_or_equal">
                  			<args><arg><value type="value">200</value></arg></args>
                  		</operation>
                  		<operation type="lower">
                  			<args><arg><value type="value">300</value></arg></args>
                  		</operation>
                	</expr>
            	</result>
            </check>

            <!-- Checks de respuesta de Fix CAR CNR IP Fija-->
            <check id="chk_fc_cnr_err_code_ok">
              <parameter>par_fc_cnr_err_code</parameter>
              <result>
                <expr type="and">
                  <operation type="equal">
                    <args><arg><value type="value">0</value></arg></args>
                  </operation>
                </expr>
              </result>
            </check>
            <check id="chk_fc_cnr_http_code_ok">
              <parameter>par_fc_cnr_http_code</parameter>
              <result>
                <expr type="and">
                      <operation type="greater_or_equal">
                        <args><arg><value type="value">200</value></arg></args>
                      </operation>
                      <operation type="lower">
                        <args><arg><value type="value">300</value></arg></args>
                      </operation>
                  </expr>
              </result>
            </check>

            <!-- Checks de respuesta de Fix CAR CNR IP DinÃ¡mica-->
            <!--DBC_03062021_INCHC_010_2_Se crea nueva acciÃ³n para cnr ip dinÃ¡mica-->
            <check id="chk_fc_cnr_din_err_code_ok">
              <parameter>par_fc_cnr_din_err_code</parameter>
              <result>
                <expr type="and">
                  <operation type="equal">
                    <args><arg><value type="value">0</value></arg></args>
                  </operation>
                </expr>
              </result>
            </check>
            <check id="chk_fc_cnr_din_http_code_ok">
              <parameter>par_fc_cnr_din_http_code</parameter>
              <result>
                <expr type="and">
                      <operation type="greater_or_equal">
                        <args><arg><value type="value">200</value></arg></args>
                      </operation>
                      <operation type="lower">
                        <args><arg><value type="value">300</value></arg></args>
                      </operation>
                  </expr>
              </result>
            </check>
			
			<!--JJSM 20210510 - INCP_101_2 - INICIO -->
            <!-- Checks de respuesta de Fix CAR VOZ ENRUTADA -->
            <check id="chk_fc_enrutada_err_code_ok">
              <parameter>par_fc_enrutada_err_code</parameter>
              <result>
                <expr type="and">
                  <operation type="equal">
                    <args><arg><value type="value">0</value></arg></args>
                  </operation>
                </expr>
              </result>
            </check>
            <check id="chk_fc_enrutada_http_code_ok">
              <parameter>par_fc_enrutada_http_code</parameter>
              <result>
                <expr type="and">
                      <operation type="greater_or_equal">
                        <args><arg><value type="value">200</value></arg></args>
                      </operation>
                      <operation type="lower">
                        <args><arg><value type="value">300</value></arg></args>
                      </operation>
                  </expr>
              </result>
            </check>
			<!--JJSM 20210510 - INCP_101_2 - FIN -->

          <!-- Checks de respuesta de EBI -->
            <check id="chk_ebi_err_code_ok">
            	<parameter>par_ebi_err_code</parameter>
            	<result>
            		<expr type="and">
                  <operation type="equal">
                  	<args><arg><value type="value">0</value></arg></args>
                  </operation>
                </expr>
            	</result>
            </check>
            <check id="chk_ebi_http_code_ok">
            	<parameter>par_ebi_http_code</parameter>
            	<result>
            		<expr type="and">
                  <operation type="greater_or_equal">
                  	<args><arg><value type="value">200</value></arg></args>
                  </operation>
                  <operation type="lower">
                  	<args><arg><value type="value">300</value></arg></args>
                  </operation>
                </expr>
            	</result>
            </check>

             <!-- Checks de respuesta de EBI CNR-->
            <check id="chk_ebi_cnr_err_code_ok">
              <parameter>par_ebi_cnr_err_code</parameter>
              <result>
                <expr type="and">
                  <operation type="equal">
                    <args><arg><value type="value">0</value></arg></args>
                  </operation>
                </expr>
              </result>
            </check>
            <check id="chk_ebi_cnr_http_code_ok">
              <parameter>par_ebi_cnr_http_code</parameter>
              <result>
                <expr type="and">
                  <operation type="greater_or_equal">
                    <args><arg><value type="value">200</value></arg></args>
                  </operation>
                  <operation type="lower">
                    <args><arg><value type="value">300</value></arg></args>
                  </operation>
                </expr>
              </result>
            </check>

          <!-- Checks de respuesta de DESNAT -->
            <check id="chk_desnat_err_code_ok">
            	<parameter>par_desnat_err_code</parameter>
            	<result>
            		<expr type="and">
                  <operation type="equal">
                  	<args><arg><value type="value">0</value></arg></args>
                  </operation>
                </expr>
            	</result>
            </check>
            <check id="chk_desnat_http_code_ok">
            	<parameter>par_desnat_http_code</parameter>
            	<result>
            		<expr type="and">
                  <operation type="greater_or_equal">
                  	<args><arg><value type="value">200</value></arg></args>
                  </operation>
                  <operation type="lower">
                  	<args><arg><value type="value">300</value></arg></args>
                  </operation>
                </expr>
            	</result>
            </check>
            <!--DBC_INCX_010_3_20210309_Nuevos CR y req VF Inicio chk de endpoint acciones-->
            <!-- Checks de respuesta de ACTNAT -->
            <check id="chk_actnat_err_code_ok">
              <parameter>par_actnat_err_code</parameter>
              <result>
                <expr type="and">
                  <operation type="equal">
                    <args><arg><value type="value">0</value></arg></args>
                  </operation>
                </expr>
              </result>
            </check>
            <check id="chk_actnat_http_code_ok">
              <parameter>par_actnat_http_code</parameter>
              <result>
                <expr type="and">
                  <operation type="greater_or_equal">
                    <args><arg><value type="value">200</value></arg></args>
                  </operation>
                  <operation type="lower">
                    <args><arg><value type="value">300</value></arg></args>
                  </operation>
                </expr>
              </result>
            </check>

            <!-- Checks de respuesta de ResetSession -->
            <check id="chk_rstsession_err_code_ok">
              <parameter>par_rstsession_err_code</parameter>
              <result>
                <expr type="and">
                  <operation type="equal">
                    <args><arg><value type="value">0</value></arg></args>
                  </operation>
                </expr>
              </result>
            </check>
            <check id="chk_rstsession_err_code_timeout">
                <parameter>par_rstsession_err_code</parameter>
                <result>
                  <expr type="and">
                    <operation type="equal">
                      <args><arg><value type="value">9</value></arg></args>
                    </operation>
                  </expr>
                </result>
            </check>
            <check id="chk_rstsession_http_code_timeout">
                <parameter>par_rstsession_http_code</parameter>
                <result>
                  <expr type="and">
                    <operation type="equal">
                      <args><arg><value type="value">504</value></arg></args>
                    </operation>
                  </expr>
                </result>
            </check>
            <check id="chk_rstsession_http_code_ok">
              <parameter>par_rstsession_http_code</parameter>
              <result>
                <expr type="and">
                  <operation type="greater_or_equal">
                    <args><arg><value type="value">200</value></arg></args>
                  </operation>
                  <operation type="lower">
                    <args><arg><value type="value">300</value></arg></args>
                  </operation>
                </expr>
              </result>
            </check>
            <!--DBC_INCX_010_3_20210309_Nuevos CR y req VF Fin chk de endpoint acciones-->
            
        <!-- CHECKS DE Servicio_por_network_id -->

        	<check id="chk_snid_error_reasoncode_eq1035">
        		<parameter>par_snid_error_reasoncode</parameter>
        		<result>
        			<expr type="and">
			    <operation type="equal">
			    	<args><arg><value type="value">1035</value></arg></args>
			    </operation>
			  </expr>
        		</result>
			</check>

			<check id="chk_snid_error_name_contains_LDAP">
				<parameter>par_snid_error_name</parameter>
				<result>
					<expr type="and">
			    <operation type="contains">
			    	<args><arg><value type="value">LDAP</value></arg></args>
			    </operation>
			  </expr>
				</result>
			</check>

			<check id="chk_snid_failure_text_contains_LDAP">
				<parameter>par_snid_failure_text</parameter>
				<result>
					<expr type="and">
			    <operation type="contains">
			    	<args><arg><value type="value">LDAP</value></arg></args>
			    </operation>
			  </expr>
				</result>
			</check>

        	<check id="chk_snid_radius_datapwd_nequnknown">
        		<parameter>par_radius_datapwd</parameter>
        		<result>
        			<expr type="and">
                  <operation type="not_equal">
                  	<args><arg><value type="value">unknown</value></arg></args>
                  </operation>
                </expr>
        		</result>
            </check>

            <check id="chk_front_inet_data_password_nequnknown">
            	<parameter>par_inet_data_password_front</parameter>
            	<result>
            		<expr type="and">
                  <operation type="not_equal">
                  	<args><arg><value type="value">unknown</value></arg></args>
                  </operation>
                </expr>
            	</result>
            </check>

            <check id="chk_snid_radius_datapwd_equals_data_password">
            	<parameter>par_radius_datapwd</parameter>
            	<result>
            		<expr type="and">
                  <operation type="equal">
                  	<args><arg><value type="parameter" role="front">par_inet_data_password</value></arg></args>
                  </operation>
                </expr>
            	</result>
            </check>

            <check id="chk_snid_radius_ip_nequnknown">
            	<parameter>par_radius_ip</parameter>
            	<result>
            		<expr type="and">
                  <operation type="not_equal">
                  	<args><arg><value type="value">unknown</value></arg></args>
                  </operation>
                </expr>
            	</result>
            </check>

            <check id="chk_snid_radius_ip_nequnknown_cm">
              <parameter>par_radius_ip_cm</parameter>
              <result>
                <expr type="and">
                  <operation type="not_equal">
                    <args><arg><value type="value">unknown</value></arg></args>
                  </operation>
                </expr>
              </result>
            </check>

            <check id="chk_radius_uid_nequnknown">
            	<parameter>par_radius_uid</parameter>
            	<result>
            		<expr type="and">
                  <operation type="not_equal">
                  	<args><arg><value type="value">unknown</value></arg></args>
                  </operation>
                </expr>
            	</result>
            </check>

            <check id="chk_snid_radius_ip_equnknown">
            	<parameter>par_radius_ip</parameter>
            	<result>
            		<expr type="and">
                  <operation type="equal">
                  	<args><arg><value type="value">unknown</value></arg></args>
                  </operation>
                </expr>
            	</result>
            </check>

            <check id="chk_snid_radius_ip_equnknown_cm">
              <parameter>par_radius_ip_cm</parameter>
              <result>
                <expr type="and">
                  <operation type="equal">
                  	<args><arg><value type="value">unknown</value></arg></args>
                  </operation>
                </expr>
            	</result>
            </check>

            <check id="chk_snid_radius_ip_equals_ip_address">
            	<parameter>par_radius_ip</parameter>
            	<result>
            		<expr type="and">
                  <operation type="equal">
                  	<args><arg><value type="parameter" role="front">par_inet_ip_address</value></arg></args>
                  </operation>
                </expr>
            	</result>
            </check>

            <!-- FCS20210707_INCHM_146_3_Se crea checks que no estaban creados_INICIO -->
            <check id="chk_snid_radius_ip_equals_ip_address_cm">
            	<parameter>par_radius_ip_cm</parameter>
            	<result>
            		<expr type="and">
                  <operation type="equal">
                  	<args><arg><value type="parameter" role="front">par_inet_ip_address</value></arg></args>
                  </operation>
                </expr>
            	</result>
            </check>

            <check id="chk_snid_radius_ip_neq_ip_address_cm">
            	<parameter>par_radius_ip_cm</parameter>
            	<result>
            		<expr type="and">
                  <operation type="not_equal">
                  	<args><arg><value type="parameter" role="front">par_inet_ip_address</value></arg></args>
                  </operation>
                </expr>
            	</result>
            </check>
            <!-- FCS20210707_INCHM_146_3_Se crea checks que no estaban creados_FIN -->

            <check id="chk_snid_radius_ip_neq_ip_address">
            	<parameter>par_radius_ip</parameter>
            	<result>
            		<expr type="and">
                  <operation type="not_equal">
                  	<args><arg><value type="parameter" role="front">par_inet_ip_address</value></arg></args>
                  </operation>
                </expr>
            	</result>
            </check>

            <check id="chk_front_ip_address_nequnknown">
            	<parameter>par_inet_ip_address_front</parameter>
            	<result>
            		<expr type="and">
                  <operation type="not_equal">
                  	<args><arg><value type="value">unknown</value></arg></args>
                  </operation>
                </expr>
            	</result>
            </check>

            <check id="chk_snid_radius_ciscoavpair_contains_ip_inacl_125">
            	<parameter>par_radius_ciscoavpair</parameter>
            	<result>
            		<expr type="and">
	                  <operation type="contains">
	                  	<args><arg><value type="value">ip:inacl=125</value></arg></args>
	                  </operation>
	                </expr>
            	</result>
            </check>

            <check id="chk_snid_radius_ciscoavpair_notcontain_ip_inacl_125">
            	<parameter>par_radius_ciscoavpair</parameter>
            	<result>
            		<expr type="and">
                  		<operation type="not_contains">
	                  		<args><arg><value type="value">ip:inacl=125</value></arg></args>
	                  	</operation>
	                </expr>
            	</result>
            </check>

            <check id="chk_snid_radius_perfil_nequnknown">
            	<parameter>par_radius_perfil</parameter>
            	<result>
            		<expr type="and">
                  <operation type="not_equal">
                  	<args><arg><value type="value">unknown</value></arg></args>
                  </operation>
                </expr>
            	</result>
            </check>

            <check id="chk_service_status_activo">
            	<parameter>par_service_status</parameter>
            	<result>
            		<expr type="and">
                <operation type="equal">
                	<args><arg><value type="value">Activo</value></arg></args>
                </operation>
              </expr>
            	</result>
            </check>

            <check id="chk_service_substatus_suspendido">
            	<parameter>par_service_substatus</parameter>
            	<result>
            		<expr type="and">
                <operation type="equal">
                	<args><arg><value type="value">Suspendido</value></arg></args>
                </operation>
              </expr>
            	</result>
            </check>

            <check id="chk_par_radius_generic_template_nequnknown">
            	<parameter>par_radius_generic_template</parameter>
            	<result>
            		<expr type="and">
                <operation type="not_equal">
                	<args><arg><value type="value">unknown</value></arg></args>
                </operation>
              </expr>
            	</result>
            </check>

            <check id="chk_par_template_nequnknown">
            	<parameter>par_template</parameter>
              <result>
                <expr type="and">
                  <operation type="not_equal">
                    <args><arg><value type="value">unknown</value></arg></args>
                  </operation>
                </expr>
              </result>
            </check>

            <check id="chk_par_template_equnknown">
            	<parameter>par_template</parameter>
				<result>
					<expr type="and">
						<operation type="equal">
							<args><arg><value type="value">unknown</value></arg></args>
						</operation>
					</expr>
				</result>
            </check>

            <check id="chk_par_template_pool_nequnknown">
            	<parameter>par_template_pool</parameter>
            	<result>
            		<expr type="and">
                <operation type="not_equal">
                	<args><arg><value type="value">unknown</value></arg></args>
                </operation>
              </expr>
            	</result>
            </check>

            <check id="chk_par_template_pool_neqnull">
            	<parameter>par_template_pool</parameter>
            	<result>
            		<expr type="and">
                <operation type="not_equal">
                	<args><arg><value type="value">null</value></arg></args>
                </operation>
              </expr>
            	</result>
            </check>

            <check id="chk_par_template_pool_nat_nequnknown">
            	<parameter>par_template_pool_nat</parameter>
            	<result>
            		<expr type="and">
                <operation type="not_equal">
                	<args><arg><value type="value">unknown</value></arg></args>
                </operation>
              </expr>
            	</result>
            </check>

            <check id="chk_par_template_pool_nat_neqnull">
            	<parameter>par_template_pool_nat</parameter>
            	<result>
            		<expr type="and">
                <operation type="not_equal">
                	<args><arg><value type="value">null</value></arg></args>
                </operation>
              </expr>
            	</result>
            </check>

            <check id="chk_par_radius_pool_nequnknown">
            	<parameter>par_radius_pool</parameter>
            	<result>
            		<expr type="and">
                <operation type="not_equal">
                	<args><arg><value type="value">unknown</value></arg></args>
                </operation>
              </expr>
            	</result>
            </check>

            <check id="chk_par_radius_pool_nequnknown_cm">
              <parameter>par_radius_pool_cm</parameter>
              <result>
                <expr type="and">
                <operation type="not_equal">
                  <args><arg><value type="value">unknown</value></arg></args>
                </operation>
              </expr>
              </result>
            </check>

            <check id="chk_snid_radius_pool_containsnat">
            	<parameter>par_radius_pool</parameter>
            	<result>
            		<expr type="and">
                <operation type="contains">
                	<args><arg><value type="value">NAT</value></arg></args>
                </operation>
              </expr>
            	</result>
            </check>

            <check id="chk_snid_radius_pool_notcontainnat">
            	<parameter>par_radius_pool</parameter>
            	<result>
            		<expr type="and">
                <operation type="not_contains">
                	<args><arg><value type="value">NAT</value></arg></args>
                </operation>
              </expr>
            	</result>
            </check>

            <check id="chk_snid_radius_pool_containsnat_cm">
              <parameter>par_radius_pool_cm</parameter>
              <result>
                <expr type="and">
                <operation type="contains">
                  <args><arg><value type="value">NAT</value></arg></args>
                </operation>
              </expr>
              </result>
            </check>

            <check id="chk_snid_radius_pool_notcontainnat_cm">
              <parameter>par_radius_pool_cm</parameter>
              <result>
                <expr type="and">
                <operation type="not_contains">
                  <args><arg><value type="value">NAT</value></arg></args>
                </operation>
              </expr>
              </result>
            </check>

            <check id="chk_par_template_pool_eq_par_radius_pool">
            	<parameter>par_template_pool</parameter>
            	<result>
            		<expr type="and">
                <operation type="equal">
                	<args><arg><value type="parameter">par_radius_pool</value></arg></args>
                </operation>
              </expr>
            	</result>
            </check>

            <check id="chk_par_template_pool_eq_par_radius_pool_cm">
              <parameter>par_template_pool</parameter>
              <result>
                <expr type="and">
                <operation type="equal">
                  <args><arg><value type="parameter">par_radius_pool_cm</value></arg></args>
                </operation>
              </expr>
              </result>
            </check>

            <!-- FCS20210707_INCHM_146_3_Se crea check que no estaba aplicando -->
            <check id="chk_par_template_pool_neq_par_radius_pool_cm">
              <parameter>par_template_pool</parameter>
              <result>
                <expr type="and">
                <operation type="not_equal">
                  <args><arg><value type="parameter">par_radius_pool_cm</value></arg></args>
                </operation>
              </expr>
              </result>
            </check>

            <check id="chk_par_template_pool_neq_par_radius_pool">
            	<parameter>par_template_pool</parameter>
            	<result>
            		<expr type="and">
                <operation type="not_equal">
                	<args><arg><value type="parameter">par_radius_pool</value></arg></args>
                </operation>
              </expr>
            	</result>
            </check>

            <check id="chk_par_template_pool_nat_eq_par_radius_pool">
            	<parameter>par_template_pool_nat</parameter>
            	<result>
            		<expr type="and">
                <operation type="equal">
                	<args><arg><value type="parameter">par_radius_pool</value></arg></args>
                </operation>
              </expr>
            	</result>
            </check>

            <check id="chk_par_template_pool_nat_neq_par_radius_pool">
            	<parameter>par_template_pool_nat</parameter>
            	<result>
            		<expr type="and">
                <operation type="not_equal">
                	<args><arg><value type="parameter">par_radius_pool</value></arg></args>
                </operation>
              </expr>
            	</result>
            </check>

            <check id="chk_par_template_pool_nat_eq_par_radius_pool_cm">
              <parameter>par_template_pool_nat</parameter>
              <result>
                <expr type="and">
                <operation type="equal">
                  <args><arg><value type="parameter">par_radius_pool_cm</value></arg></args>
                </operation>
              </expr>
              </result>
            </check>

            <check id="chk_par_template_pool_nat_neq_par_radius_pool_cm">
              <parameter>par_template_pool_nat</parameter>
              <result>
                <expr type="and">
                <operation type="not_equal">
                  <args><arg><value type="parameter">par_radius_pool_cm</value></arg></args>
                </operation>
              </expr>
              </result>
            </check>

            <check id="chk_snid_radius_perfil_containsnat">
            	<parameter>par_radius_perfil</parameter>
            	<result>
            		<expr type="and">
                <operation type="contains">
                	<args><arg><value type="value">NAT</value></arg></args>
                </operation>
              </expr>
            	</result>
            </check>
            
            <check id="chk_snid_radius_perfil_notcontainnat">
            	<parameter>par_radius_perfil</parameter>
            	<result>
            		<expr type="and">
                <operation type="not_contains">
                	<args><arg><value type="value">NAT</value></arg></args>
                </operation>
              </expr>
            	</result>
            </check>

            <check id="chk_snid_radius_perfil_containsnat_cm">
              <parameter>par_radius_perfil_cm</parameter>
              <result>
                <expr type="and">
                <operation type="contains">
                  <args><arg><value type="value">NAT</value></arg></args>
                </operation>
              </expr>
              </result>
            </check>
            
            <check id="chk_snid_radius_perfil_notcontainnat_cm">
              <parameter>par_radius_perfil_cm</parameter>
              <result>
                <expr type="and">
                <operation type="not_contains">
                	<args><arg><value type="value">NAT</value></arg></args>
                </operation>
              </expr>
            	</result>
            </check>

            <check id="chk_par_template_perfil_nequnknown">
            	<parameter>par_template_perfil</parameter>
            	<result>
            		<expr type="and">
                <operation type="not_equal">
                	<args><arg><value type="value">unknown</value></arg></args>
                </operation>
              </expr>
            	</result>
            </check>

            <check id="chk_par_template_perfil_neqnull">
            	<parameter>par_template_perfil</parameter>
            	<result>
            		<expr type="and">
                <operation type="not_equal">
                	<args><arg><value type="value">null</value></arg></args>
                </operation>
              </expr>
            	</result>
            </check>

            <check id="chk_par_template_perfil_nat_nequnknown">
            	<parameter>par_template_perfil_nat</parameter>
            	<result>
            		<expr type="and">
                <operation type="not_equal">
                	<args><arg><value type="value">unknown</value></arg></args>
                </operation>
              </expr>
            	</result>
            </check>

            <check id="chk_par_template_perfil_nat_neqnull">
            	<parameter>par_template_perfil_nat</parameter>
            	<result>
            		<expr type="and">
                <operation type="not_equal">
                	<args><arg><value type="value">null</value></arg></args>
                </operation>
              </expr>
            	</result>
            </check>

            <check id="chk_par_template_perfil_eq_par_radius_perfil">
            	<parameter>par_template_perfil</parameter>
            	<result>
            		<expr type="and">
                <operation type="contains">
                	<args><arg><value type="parameter">par_radius_perfil</value></arg></args>
                </operation>
              </expr>
            	</result>
            </check>

            <check id="chk_par_template_perfil_neq_par_radius_perfil">
            	<parameter>par_template_perfil</parameter>
            	<result>
            		<expr type="and">
                <operation type="not_contains">
                	<args><arg><value type="parameter">par_radius_perfil</value></arg></args>
                </operation>
              </expr>
            	</result>
            </check>

            <check id="chk_par_template_perfil_nat_eq_par_radius_perfil">
            	<parameter>par_template_perfil_nat</parameter>
            	<result>
            		<expr type="and">
                <operation type="contains">
                	<args><arg><value type="parameter">par_radius_perfil</value></arg></args>
                </operation>
              </expr>
            	</result>
            </check>

            <check id="chk_par_template_perfil_nat_neq_par_radius_perfil">
            	<parameter>par_template_perfil_nat</parameter>
            	<result>
            		<expr type="and">
                <operation type="not_contains">
                	<args><arg><value type="parameter">par_radius_perfil</value></arg></args>
                </operation>
              </expr>
            	</result>
            </check>

            <check id="chk_par_template_perfil_eq_par_radius_perfil_cm">
              <parameter>par_template_perfil</parameter>
              <result>
                <expr type="and">
                <operation type="contains">
                  <args><arg><value type="parameter">par_radius_perfil_cm</value></arg></args>
                </operation>
              </expr>
              </result>
            </check>

            <check id="chk_par_template_perfil_neq_par_radius_perfil_cm">
              <parameter>par_template_perfil</parameter>
              <result>
                <expr type="and">
                <operation type="not_contains">
                  <args><arg><value type="parameter">par_radius_perfil_cm</value></arg></args>
                </operation>
              </expr>
              </result>
            </check>

            <check id="chk_par_template_perfil_nat_eq_par_radius_perfil_cm">
              <parameter>par_template_perfil_nat</parameter>
              <result>
                <expr type="and">
                <operation type="contains">
                  <args><arg><value type="parameter">par_radius_perfil_cm</value></arg></args>
                </operation>
              </expr>
              </result>
            </check>

            <check id="chk_par_template_perfil_nat_neq_par_radius_perfil_cm">
              <parameter>par_template_perfil_nat</parameter>
              <result>
                <expr type="and">
                <operation type="not_contains">
                  <args><arg><value type="parameter">par_radius_perfil_cm</value></arg></args>
                </operation>
              </expr>
              </result>
            </check>

        <!-- CHECKS DE Servicio_por_network_id (Lowi) -->

			<check id="chk_snidlw_status_neq_unknown">
            	<parameter>par_snidlw_status</parameter>
            	<result>
            		<expr type="and">
						<operation type="not_equal">
              <!-- FCS20210827_INC000043731350_Se corrige el valor por unknown (antes active) -->
							<args><arg><value type="value">unknown</value></arg></args>
						</operation>
              		</expr>
            	</result>
            </check>

            <check id="chk_snidlw_status_eq_unknown">
            	<parameter>par_snidlw_status</parameter>
            	<result>
            		<expr type="and">
						<operation type="equal">
              <!-- FCS20210827_INC000043731350_Se corrige el valor por unknown (antes active) -->
							<args><arg><value type="value">unknown</value></arg></args>
						</operation>
              		</expr>
            	</result>
            </check>

			<check id="chk_snidlw_status_neq_active">
            	<parameter>par_snidlw_status</parameter>
            	<result>
            		<expr type="and">
						<operation type="not_equal">
							<args><arg><value type="value">active</value></arg></args>
						</operation>
              		</expr>
            	</result>
            </check>

            <check id="chk_snidlw_status_eq_active">
            	<parameter>par_snidlw_status</parameter>
            	<result>
            		<expr type="and">
						<operation type="equal">
							<args><arg><value type="value">active</value></arg></args>
						</operation>
              		</expr>
            	</result>
            </check>

			<check id="chk_snidlw_status_neq_designed">
            	<parameter>par_snidlw_status</parameter>
            	<result>
            		<expr type="and">
						<operation type="not_equal">
							<args><arg><value type="value">designed</value></arg></args>
						</operation>
              		</expr>
            	</result>
            </check>

            <check id="chk_snidlw_status_eq_designed">
            	<parameter>par_snidlw_status</parameter>
            	<result>
            		<expr type="and">
						<operation type="equal">
							<args><arg><value type="value">designed</value></arg></args>
						</operation>
              		</expr>
            	</result>
            </check>

			<check id="chk_snidlw_data_login_for_comparison_neq_data_login">
            	<parameter>par_snidlw_data_login_for_comparison</parameter>
            	<result>
            		<expr type="and">
						<operation type="not_equal">
							<args><arg>
								<value type="parameter" role="front">par_inet_data_login</value>
							</arg></args>
						</operation>
              		</expr>
            	</result>
            </check>

			<check id="chk_snidlw_data_login_for_comparison_eq_data_login">
            	<parameter>par_snidlw_data_login_for_comparison</parameter>
            	<result>
            		<expr type="and">
						<operation type="equal">
							<args><arg>
								<value type="parameter" role="front">par_inet_data_login</value>
							</arg></args>
						</operation>
              		</expr>
            	</result>
            </check>

			<check id="chk_snidlw_data_password_neq_data_password">
            	<parameter>par_snidlw_data_password</parameter>
            	<result>
            		<expr type="and">
						<operation type="not_equal">
							<args><arg><value type="parameter" role="front">par_inet_data_password</value></arg></args>
						</operation>
              		</expr>
            	</result>
            </check>

			<check id="chk_snidlw_data_password_eq_data_password">
            	<parameter>par_snidlw_data_password</parameter>
            	<result>
            		<expr type="and">
						<operation type="equal">
							<args><arg><value type="parameter" role="front">par_inet_data_password</value></arg></args>
						</operation>
              		</expr>
            	</result>
            </check>

			<check id="chk_pareteum_template_nequnknown">
            	<parameter>par_snidlw_template</parameter>
            	<result>
            		<expr type="and">
						<operation type="not_equal">
							<args><arg><value type="value">unknown</value></arg></args>
						</operation>
                	</expr>
            	</result>
            </check>

			<check id="chk_pareteum_template_notcontainnat">
            	<parameter>par_snidlw_template</parameter>
            	<result>
            		<expr type="and">
						<operation type="not_contains">
							<args><arg><value type="value">NAT</value></arg></args>
						</operation>
              		</expr>
            	</result>
            </check>

			<check id="chk_pareteum_template_containsnat">
            	<parameter>par_snidlw_template</parameter>
            	<result>
            		<expr type="and">
						<operation type="contains">
							<args><arg><value type="value">NAT</value></arg></args>
						</operation>
              		</expr>
            	</result>
            </check>

            <!--20200908_DAS: confirmado por VF en reuniÃ³n, para LW se comparan templates, no perfiles-->
            <!--DAS20201119 - Cambio comparaciÃ³n template pareteum - INICIO-->
            <!--ANTES:<check id="chk_template_neq_pareteum_template">
            	<parameter>par_template</parameter>
            	<result>
            		<expr type="and">
      						<operation type="not_equal">
      							<args><arg><value type="parameter">par_snidlw_template</value></arg></args>
      						</operation>
            		</expr>
            	</result>
            </check>-->

            <check id="chk_template_notcontains_pareteum_template">
              <parameter>par_template</parameter>
              <result>
                <expr type="and">
                  <operation type="not_contains">
                    <args><arg><value type="parameter">par_snidlw_template</value></arg></args>
                  </operation>
                </expr>
              </result>
            </check>
            <!--DAS20201119 - Cambio comparaciÃ³n template pareteum - FIN-->

            <!--20200908_DAS: confirmado por VF en reuniÃ³n, para LW se comparan templates, no perfiles-->
            <!--DAS20201119 - Cambio comparaciÃ³n template pareteum - INICIO-->
            <!--ANTES:<check id="chk_template_eq_pareteum_template">
            	<parameter>par_template</parameter>
            	<result>
            		<expr type="and">
        					<operation type="equal">
        						<args><arg><value type="parameter">par_snidlw_template</value></arg></args>
        					</operation>
            		</expr>
            	</result>
            </check>-->

            <check id="chk_template_contains_pareteum_template">
              <parameter>par_template</parameter>
              <result>
                <expr type="and">
                  <operation type="contains">
                    <args><arg><value type="parameter">par_snidlw_template</value></arg></args>
                  </operation>
                </expr>
              </result>
            </check>
            <!--DAS20201119 - Cambio comparaciÃ³n template pareteum - FIN-->

			<check id="chk_template_pool_neq_pareteum_template">
            	<parameter>par_template_pool</parameter>
            	<result>
            		<expr type="and">
						<operation type="not_equal">
							<args><arg><value type="parameter">par_snidlw_template</value></arg></args>
						</operation>
					</expr>
            	</result>
            </check>

			<check id="chk_template_pool_nat_neq_pareteum_template">
            	<parameter>par_template_pool_nat</parameter>
            	<result>
            		<expr type="and">
						<operation type="not_equal">
							<args><arg><value type="parameter">par_snidlw_template</value></arg></args>
						</operation>
					</expr>
            	</result>
            </check>

			<check id="chk_template_pool_eq_pareteum_template">
            	<parameter>par_template_pool</parameter>
            	<result>
            		<expr type="and">
						<operation type="equal">
							<args><arg><value type="parameter">par_snidlw_template</value></arg></args>
						</operation>
					</expr>
            	</result>
            </check>

			<check id="chk_template_pool_nat_eq_pareteum_template">
            	<parameter>par_template_pool_nat</parameter>
            	<result>
            		<expr type="and">
						<operation type="equal">
							<args><arg><value type="parameter">par_snidlw_template</value></arg></args>
						</operation>
					</expr>
            	</result>
            </check>

			<check id="chk_snidlw_eq_usernotexist">
            	<parameter>par_snidlw_error_message</parameter>
            	<result>
            		<expr type="and">
						<operation type="contains">
							<args><arg><value type="value">Service cannot be found for the given input</value></arg></args>
						</operation>
					</expr>
            	</result>
            </check>

			<check id="chk_snidlw_neq_usernotexist">
            	<parameter>par_snidlw_error_message</parameter>
            	<result>
            		<expr type="and">
						<operation type="not_contains">
							<args><arg><value type="value">Service cannot be found for the given input</value></arg></args>
						</operation>
					</expr>
            	</result>
            </check>

      <!--Checks de Pymes-->

      <check id="chk_radius_ip_eq_voip_ims">
          <parameter>par_radius_ip</parameter>
          <result>
              <expr type="and">
                  <operation type="equal">
                      <args><arg><value type="parameter" role="front">par_grc_voip_ims</value></arg></args>
                  </operation>
              </expr>
          </result>
      </check>

      <check id="chk_radius_ip_not_contains_voip_ims">
          <parameter>par_radius_ip</parameter>
          <result>
              <expr type="and">
                  <operation type="not_contains">
                      <args><arg><value type="parameter" role="front">par_inet_ip_address</value></arg></args>
                  </operation>
              </expr>
          </result>
      </check>

      <check id="chk_radius_ip_not_contains_255.255.255.255">
          <parameter>par_radius_ip</parameter>
          <result>
              <expr type="and">
                  <operation type="not_contains">
                      <args><arg><value type="value">255.255.255.255</value></arg></args>
                  </operation>
              </expr>
          </result>
      </check>

      <check id="chk_radius_ip_eq_voip_ims">
          <parameter>par_radius_ip</parameter>
          <result>
              <expr type="and">
                  <operation type="equal">
                      <args><arg><value type="parameter" role="front">par_grc_voip_ims</value></arg></args>
                  </operation>
              </expr>
          </result>
      </check>

      <check id="chk_radius_ip_contains_voip_ims">
          <parameter>par_radius_ip</parameter>
          <result>
              <expr type="and">
                  <operation type="contains">
                      <args><arg><value type="parameter">par_front_grc_voip_ims</value></arg></args><!-- JJSM 20210507 - INCP_101 -->
                  </operation>
              </expr>
          </result>
      </check>
	  <!-- JJSM 20210323 - INCP_101 - INICIO -->
      <check id="chk_radius_framedroute_contains_ip_inet">
          <parameter>par_radius_framedroute</parameter>
          <result>
              <expr type="and">
                  <operation type="contains">
                      <args><arg><value type="parameter">par_inet_ip_address_front</value></arg></args><!-- JJSM 20210507 - INCP_101 -->
                  </operation>
              </expr>
          </result>
      </check>
	  <!-- JJSM 20210323 - INCP_101 - FIN -->
      <check id="chk_radius_ip_contains_255.255.255.255">
          <parameter>par_radius_ip</parameter>
          <result>
              <expr type="and">
                  <operation type="contains">
                      <args><arg><value type="value">255.255.255.255</value></arg></args>
                  </operation>
              </expr>
          </result>
      </check>

      <!-- Checks para xDSL AI Voz Enrutada--><!--DAS20210326 - Se crean checks en Radius para usar datos de front-->

        <check id="chk_front_grc_access_type_eq_xdsl_ai">
          <parameter>par_front_access_type</parameter>
          <result>
              <expr type="and">
                  <operation type="equal">
                      <args><arg><value type="value">xDSL AI</value></arg></args>
                  </operation>
              </expr>
          </result>
        </check>

        <check id="chk_inet_ip_address_front_nequnknown">
          <parameter>par_inet_ip_address_front</parameter>
          <result>
            <expr type="and">
              <operation type="not_equal">
                <args><arg><value type="value">unknown</value></arg></args>
              </operation>
            </expr>
          </result>
        </check>

        <check id="chk_front_grc_voip_ims_neq_unknown">
          <parameter>par_front_grc_voip_ims</parameter>
          <result>
            <expr type="and">
              <operation type="not_equal">
                <args><arg><value type="value">unknown</value></arg></args>
              </operation>
            </expr>
          </result>
        </check>
        <!-- PCA20210909 - INC000043991833 - INICIO -->
        <check id="chk_client_is_lowi">
          <parameter>par_grc_service_id_front</parameter>
          <result>
			<!-- JJSM 20240130 - INC000084268644 - INICIO-->
			<expr type="or">
				<operation type="starts_with">
				  <args><arg><value type="value">LW</value></arg></args>
				</operation>
				<operation type="starts_with">
					<args><arg><value type="value">W1N</value></arg></args>
				</operation>
				<operation type="starts_with">
					<args><arg><value type="value">W1F</value></arg></args>
				</operation>
				<operation type="starts_with">
					<args><arg><value type="value">W1H</value></arg></args>
				</operation>
				<operation type="starts_with">
					<args><arg><value type="value">W2N</value></arg></args>
				</operation>
				<operation type="starts_with">
					<args><arg><value type="value">W2F</value></arg></args>
				</operation>
				<operation type="starts_with">
					<args><arg><value type="value">W2H</value></arg></args>
				</operation>
			</expr>
			<!-- JJSM 20240130 - INC000084268644 - FIN-->
          </result>
        </check>
        <!-- PCA20210909 - INC000043991833 - FIN -->

        <!--CCA20221111 - INC000059698088 - INICIO-->
        <check id="chk_mta_sip_access_id_neq_unknown">
            <parameter>par_front_mta_sip_access_id</parameter>
            <result>
                <expr type="and">
                    <operation type="not_equal">
                        <args><arg><value type="value">unknown</value></arg></args>
                    </operation>
                </expr>
            </result>
        </check>

        <check id="chk_grc_access_type_eq_hfc_legacy">
            <parameter>par_front_hfc_access_accessprofile_aux</parameter>
            <result>
                <expr type="and">
                    <operation type="equal">
                        <args><arg><value type="value">HFC_Legacy</value></arg></args>
                    </operation>
                </expr>
            </result>
        </check>
        <!--CCA20221111 - INC000059698088 - FIN-->

    </checks>

    <tests>
    	<!-- TEST TEMPLATE -->
	        <test id="tst_template">
	            <expr type="and">
                <!--CCA20221111 - INC000059698088 - INICIO-->
                <reference type="test" id="tst_cliente_hfc_mta" inverse="true"/>
                <reference type="test" id="tst_technology_ishfc_legacy" inverse="true"/>
                <!--CCA20221111 - INC000059698088 - FIN-->
              </expr>
	        </test>

        <!-- TESTS DE ENDPOINTS -->
          	<!-- TEST DE SNID -->
	            <test id="tst_endpoint_snid_isok">
	            	<expr type="and">
	                	<reference type="check" id="chk_snid_err_code_ok"/>
	                	<reference type="check" id="chk_snid_http_code_ok"/>
	              	</expr>
	            </test>

	            <test id="tst_endpoint_snid_internal_server_error">
	            	<expr type="and">
	                	<reference type="check" id="chk_snid_http_code_eq500"/>
	              	</expr>
	            </test>

			       <!-- TEST DE SNID (Lowi) -->
	            <test id="tst_endpoint_snidlw_isok">
	            	<expr type="and">
	                	<reference type="check" id="chk_snidlw_err_code_ok"/>
	                	<reference type="check" id="chk_snidlw_http_code_ok"/>
	              	</expr>
	            </test>

	            <test id="tst_endpoint_snidlw_internal_server_error">
	            	<expr type="and">
	                	<reference type="check" id="chk_snidlw_http_code_eq500"/>
	              	</expr>
	            </test>

              <!-- TEST DE SNIDHFC -->
              <test id="tst_endpoint_snidhfc_isok">
                <expr type="and">
                    <reference type="check" id="chk_snidhfc_err_code_ok"/>
                    <reference type="check" id="chk_snidhfc_http_code_ok"/>
                  </expr>
              </test>

              <test id="tst_endpoint_snidhfc_internal_server_error">
                <expr type="and">
                    <reference type="check" id="chk_snidhfc_http_code_eq500"/>
                  </expr>
              </test>

              <!-- PCA20210421 - INCI_048 - INICIO -->
              <test id="tst_snidhfc_no_impago">
                <expr type="and">
                    <reference type="check" id="chk_snidhfc_no_impago"/>
                  </expr>
              </test>
              <!-- PCA20210421 - INCI_048 - FIN -->

            <!-- TEST DE Radius_Logs_del_usuario -->
	            <test id="tst_endpoint_rlu_isok">
	            	<expr type="and">
	                	<reference type="check" id="chk_rlu_err_code_ok"/>
	                	<reference type="check" id="chk_rlu_http_code_ok"/>
	              	</expr>
	            </test>

	            <test id="tst_endpoint_rlu_isko">
		        	<expr type="or">
		        	    <reference type="check" id="chk_rlu_err_code_notok"/>
		            	<reference type="check" id="chk_rlu_http_code_notok"/>
		            </expr>
		        </test>

	        <!-- TEST DE Fix CAR Actualizar IP -->
              <test id="tst_endpoint_fc_isok">
              	<expr type="and">
                    <reference type="check" id="chk_fc_err_code_ok"/>
                    <reference type="check" id="chk_fc_http_code_ok"/>
                  </expr>
              </test>

              <!-- TEST DE Fix CAR ID TV -->
              <test id="tst_endpoint_fc_ftth_isok">
              	<expr type="and">
                    <reference type="check" id="chk_fc_ftth_err_code_ok"/>
                    <reference type="check" id="chk_fc_ftth_http_code_ok"/>
                  </expr>
              </test>

              <!-- TEST DE Fix CAR CNR -->
              <test id="tst_endpoint_fc_cnr_isok">
                <expr type="and">
                    <reference type="check" id="chk_fc_cnr_err_code_ok"/>
                    <reference type="check" id="chk_fc_cnr_http_code_ok"/>
                  </expr>
              </test>

            <!--DBC_03062021_INCHC_010_2_Se crea nueva acciÃ³n para cnr ip dinÃ¡mica-->
            <test id="tst_endpoint_fc_cnr_din_isok">
                <expr type="and">
                    <reference type="check" id="chk_fc_cnr_din_err_code_ok"/>
                    <reference type="check" id="chk_fc_cnr_din_http_code_ok"/>
                  </expr>
              </test>

            <!-- TEST DE Eliminar bloqueo impago -->
              <test id="tst_endpoint_ebi_isok">
              	<expr type="and">
                    <reference type="check" id="chk_ebi_err_code_ok"/>
                    <reference type="check" id="chk_ebi_http_code_ok"/>
                  </expr>
              </test>

              <!-- TEST DE Eliminar bloqueo impago CNR-->
              <test id="tst_endpoint_ebi_cnr_isok">
                <expr type="and">
                    <reference type="check" id="chk_ebi_cnr_err_code_ok"/>
                    <reference type="check" id="chk_ebi_cnr_http_code_ok"/>
                  </expr>
              </test>

            <!-- TEST DE Desactivar NAT -->
              <test id="tst_endpoint_desnat_isok">
              	<expr type="and">
                    <reference type="check" id="chk_desnat_err_code_ok"/>
                    <reference type="check" id="chk_desnat_http_code_ok"/>
                  </expr>
              </test>

              <!--DBC_INCX_010_3_20210309_Nuevos CR y req VF Inicio Test de endpoint acciones-->
              <!-- TEST DE activar NAT -->
              <test id="tst_endpoint_actnat_isok">
                <expr type="and">
                    <reference type="check" id="chk_actnat_err_code_ok"/>
                    <reference type="check" id="chk_actnat_http_code_ok"/>
                  </expr>
              </test>

              <!-- TEST DE Reset Session -->
              <test id="tst_endpoint_rstsession_isok">
                <expr type="and">
                    <reference type="check" id="chk_rstsession_err_code_ok"/>
                    <reference type="check" id="chk_rstsession_http_code_ok"/>
                  </expr>
              </test>

              <test id="tst_endpoint_rstsession_istimeout">
                  <expr type="and">
                      <reference type="check" id="chk_rstsession_err_code_timeout"/>
                      <!--<reference type="check" id="chk_rstsession_http_code_timeout"/>-->
                  </expr>
              </test>

              <!--DBC_INCX_010_3_20210309_Nuevos CR y req VF Fin Test de endpoint acciones-->

        <!-- TESTS DE Servicio_por_network_id -->

        	<test id="tst_no_alta_radius">
        		<expr type="or">
			  	<reference type="test" id="tst_error_ldap"/>
			    <reference type="check" id="chk_snid_error_reasoncode_eq1035"/>
			  </expr>
			</test>

			<test id="tst_alta_radius">
				<expr type="and">
			    <reference type="test" id="tst_endpoint_snid_isok"/>
			    <reference type="test" id="tst_radius_uid_nequnknown"/>
			    <reference type="test" id="tst_no_alta_radius" inverse="true"/>
			  </expr>
			</test>

			<test id="tst_error_ldap">
				<expr type="or">
					<reference type="check" id="chk_snid_error_name_contains_LDAP"/>
					<reference type="check" id="chk_snid_failure_text_contains_LDAP"/>
				</expr>
			</test>

        	<test id="tst_snid_radius_datapwd_notnull">
        		<expr type="and">
        			<reference type="check" id="chk_snid_radius_datapwd_nequnknown"/>
        		</expr>
        	</test>

        	<test id="tst_front_inet_data_password_notnull">
        		<expr type="and">
        			<reference type="check" id="chk_front_inet_data_password_nequnknown"/>
        		</expr>
        	</test>

        	<test id="tst_any_datapwd_notnull">
    			<expr type ="or">
        			<reference type="test" id="tst_snid_radius_datapwd_notnull"/>
        			<reference type="test" id="tst_front_inet_data_password_notnull"/>
        		</expr>
        	</test>

        	

        	<!-- test pwd ok bueno
          <test id="tst_pwd_isok">
          	<expr type="and">
        			<reference type="check" id="chk_snid_radius_datapwd_equals_data_password"/>
        			<reference type="test" id="tst_snid_radius_datapwd_notnull"/>
        		</expr>
        	</test>-->

          	<!-- test pwd isok prueba-->
	        <test id="tst_pwd_isok">
	        	<expr type="and">
	              <reference type="test" id="tst_snid_radius_datapwd_notnull"/>
	              <reference type="check" id="chk_snid_radius_datapwd_equals_data_password"/>
	            </expr>
			</test>
            

        	<test id="tst_snid_radius_ip_notnull">
        		<expr type="and">
        			<reference type="check" id="chk_snid_radius_ip_nequnknown"/>
        		</expr>
        	</test>

          <test id="tst_snid_radius_ip_notnull_cm">
            <expr type="and">
              <reference type="check" id="chk_snid_radius_ip_nequnknown_cm"/>
            </expr>
          </test>

        	<test id="tst_radius_uid_nequnknown">
        		<expr type="and">
        			<reference type="check" id="chk_radius_uid_nequnknown"/>
        		</expr>
        	</test>
        	
        	<test id="tst_snid_radius_ip_null">
        		<expr type="and">
        			<reference type="check" id="chk_snid_radius_ip_equnknown"/>
        		</expr>
        	</test>

        	<test id="tst_ip_isok">
        		<expr type="and">
        			<reference type="test" id="tst_snid_radius_ip_notnull"/>
        			<reference type="check" id="chk_front_ip_address_nequnknown"/>
        			<reference type="check" id="chk_snid_radius_ip_equals_ip_address"/>
        		</expr>
        	</test>

        	<test id="tst_ip_isnotok">
        		<expr type="and">
        			<!--<reference type="test" id="tst_snid_radius_ip_notnull"/>-->
        			<reference type="check" id="chk_front_ip_address_nequnknown"/>
        			<reference type="check" id="chk_snid_radius_ip_neq_ip_address"/>
        		</expr>
        	</test>

          <test id="tst_ip_isok_cm">
            <expr type="and">
              <reference type="test" id="tst_snid_radius_ip_notnull_cm"/>
              <reference type="check" id="chk_front_ip_address_nequnknown"/>
              <reference type="check" id="chk_snid_radius_ip_equals_ip_address_cm"/>
            </expr>
          </test>

          <test id="tst_ip_isnotok_cm">
            <expr type="and">
              <!--<reference type="test" id="tst_snid_radius_ip_notnull"/>-->
              <reference type="check" id="chk_front_ip_address_nequnknown"/>
              <reference type="check" id="chk_snid_radius_ip_neq_ip_address_cm"/>
            </expr>
          </test>

        	<test id="tst_service_perfilbloqueo">
        		<expr type="and">
                <reference type="check" id="chk_service_status_activo"/>
                <reference type="check" id="chk_service_substatus_suspendido"/>
              </expr>
            </test>

        	<test id="tst_radius_impago">
        		<expr type="and">
              			<reference type="check" id="chk_client_is_lowi" inverse="true"/><!-- PCA20211207 - INC000045760556 -->
        			<reference type="check" id="chk_snid_radius_ciscoavpair_contains_ip_inacl_125"/>
        		</expr>
        	</test>

        	<test id="tst_radius_no_impago">
        		<expr type="and">
              			<reference type="check" id="chk_client_is_lowi" inverse="true"/><!-- PCA20211207 - INC000045760556 -->
        			<reference type="check" id="chk_snid_radius_ciscoavpair_notcontain_ip_inacl_125"/>
        		</expr>
        	</test>

        	<test id="tst_radius_pool_containsnat">
        		<expr type="and">
              			<reference type="check" id="chk_client_is_lowi" inverse="true"/><!-- PCA20211207 - INC000045760556 -->
                		<reference type="check" id="chk_snid_radius_pool_containsnat"/>
              		</expr>
            </test>

            <test id="tst_cliente_nateado_radius"><!--CLIENTE NATEADO-->
        		<expr type="and">
                <reference type="check" id="chk_client_is_lowi" inverse="true"/><!-- PCA20210909 - INC000043991833 -->	 
                <reference type="check" id="chk_snid_radius_pool_containsnat"/>
              </expr>
            </test>

            <test id="tst_cliente_no_nateado_radius"><!--CLIENTE NATEADO-->
			<expr type="and">
	                	<reference type="check" id="chk_client_is_lowi" inverse="true"/><!-- PCA20211207 - INC000045760556 -->
	                	<reference type="test" id="tst_cliente_nateado_radius" inverse="true"/>
	              </expr>
            </test>
            
            <test id="tst_radius_pool_notcontainnat">
            	<expr type="and">
                <reference type="check" id="chk_client_is_lowi" inverse="true"/><!-- PCA20211207 - INC000045760556 -->
                <reference type="check" id="chk_snid_radius_pool_notcontainnat"/>
              </expr>
            </test>

            <test id="tst_radius_pool_notcontainnat_cm">
              <expr type="and">
                <reference type="check" id="chk_client_is_lowi" inverse="true"/><!-- PCA20211207 - INC000045760556 -->
                <reference type="check" id="chk_snid_radius_pool_notcontainnat_cm"/>
              </expr>
            </test>

            <test id="tst_radius_perfil_containsnat">
            	<expr type="and">
                <reference type="check" id="chk_client_is_lowi" inverse="true"/><!-- PCA20211207 - INC000045760556 -->
                <reference type="check" id="chk_snid_radius_perfil_containsnat"/>
              </expr>
            </test>

            <test id="tst_radius_perfil_notcontainnat">
            	<expr type="and">
                <reference type="check" id="chk_client_is_lowi" inverse="true"/><!-- PCA20211207 - INC000045760556 -->
                <reference type="check" id="chk_snid_radius_perfil_notcontainnat"/>
              </expr>
            </test>

            <test id="tst_radius_perfil_notcontainnat_cm">
              <expr type="and">
                <reference type="check" id="chk_client_is_lowi" inverse="true"/><!-- PCA20211207 - INC000045760556 -->
                <reference type="check" id="chk_snid_radius_perfil_notcontainnat_cm"/>
              </expr>
            </test>

        	   <test id="tst_template_pool_notnull">
        		  <expr type="and">
                <reference type="check" id="chk_par_template_pool_neqnull"/>
                <reference type="check" id="chk_par_template_pool_nequnknown"/>
              </expr>
            </test>

            <test id="tst_template_pool_notnull_cm">
              <expr type="and">
                <!--FCS20210707_INCHM_146_3_Antes acababan en _cm y no existe y ademas no es necesario crear uno especifico para cm porque no se hace llamada a snid con estos checks-->
                <reference type="check" id="chk_par_template_pool_neqnull"/>
                <reference type="check" id="chk_par_template_pool_nequnknown"/>
              </expr>
            </test>

            <test id="tst_template_pool_nat_notnull">
            	<expr type="and">
                <reference type="check" id="chk_par_template_pool_nat_neqnull"/>
                <reference type="check" id="chk_par_template_pool_nat_nequnknown"/>
              </expr>
            </test>

            <test id="tst_template_perfil_notnull">
            	<expr type="and">
                <reference type="check" id="chk_par_template_perfil_neqnull"/>
                <reference type="check" id="chk_par_template_perfil_nequnknown"/>
              </expr>
            </test>

            <test id="tst_template_perfil_nat_notnull">
            	<expr type="and">
                <reference type="check" id="chk_par_template_perfil_nat_neqnull"/>
                <reference type="check" id="chk_par_template_perfil_nat_nequnknown"/>
              </expr>
            </test>

            <!--Inventario y lookup-->
            <test id="tst_any_template_notnull">
            	<expr type="and">
                <reference type="check" id="chk_par_radius_generic_template_nequnknown"/>
                <reference type="check" id="chk_par_template_nequnknown"/>
              </expr>
            </test>

            <!--DBC_INC_421_Se crea un test para no lanzar fix_car con templete unknown-->
            <test id="tst_radius_template_nequnknown">
            	<expr type="and">
                <reference type="check" id="chk_par_radius_generic_template_nequnknown"/>
              </expr>
            </test>

            <test id="tst_par_template_pool_eq_par_radius_pool">
            	<expr type="and">
                <reference type="check" id="chk_par_radius_pool_nequnknown"/>
                <reference type="check" id="chk_par_template_pool_eq_par_radius_pool"/>
              </expr>
            </test>

            <test id="tst_par_template_pool_eq_par_radius_pool_cm">
              <expr type="and">
                <reference type="check" id="chk_par_radius_pool_nequnknown_cm"/>
                <reference type="check" id="chk_par_template_pool_eq_par_radius_pool_cm"/>
              </expr>
            </test>

            <test id="tst_par_template_pool_neq_par_radius_pool">
            	<expr type="and">
                <reference type="check" id="chk_par_radius_pool_nequnknown"/>
                <reference type="check" id="chk_par_template_pool_neq_par_radius_pool"/>
              </expr>
            </test>
            <!-- FCS20210707_INCHM_146_3_Se crea test que no estaba aplicando -->
            <test id="tst_par_template_pool_neq_par_radius_pool_cm">
            	<expr type="and">
                <reference type="check" id="chk_par_radius_pool_nequnknown_cm"/>
                <reference type="check" id="chk_par_template_pool_neq_par_radius_pool_cm"/>
              </expr>
            </test>

            <test id="tst_par_template_pool_nat_eq_par_radius_pool">
            	<expr type="and">
                <reference type="check" id="chk_par_radius_pool_nequnknown"/>
                <reference type="check" id="chk_par_template_pool_nat_eq_par_radius_pool"/>
              </expr>
            </test>

            <test id="tst_par_template_pool_nat_neq_par_radius_pool">
            	<expr type="and">
                <reference type="check" id="chk_par_radius_pool_nequnknown"/>
                <reference type="check" id="chk_par_template_pool_nat_neq_par_radius_pool"/>
              </expr>
            </test>

            <test id="tst_par_template_pool_nat_eq_par_radius_pool_cm">
              <expr type="and">
                <reference type="check" id="chk_par_radius_pool_nequnknown_cm"/>
                <reference type="check" id="chk_par_template_pool_nat_eq_par_radius_pool_cm"/>
              </expr>
            </test>

            <test id="tst_par_template_pool_nat_neq_par_radius_pool_cm">
              <expr type="and">
                <reference type="check" id="chk_par_radius_pool_nequnknown_cm"/>
                <reference type="check" id="chk_par_template_pool_nat_neq_par_radius_pool_cm"/>
              </expr>
            </test>

            <test id="tst_par_template_perfil_eq_par_radius_perfil">
            	<expr type="and">
                <!--<reference type="check" id="chk_snid_radius_perfil_nequnknown"/>--><!--se cambia el perfil por VF CFHP_Default en el caso unknown-->
                <reference type="check" id="chk_par_template_perfil_eq_par_radius_perfil"/>
              </expr>
            </test>

            <test id="tst_par_template_perfil_neq_par_radius_perfil">
            	<expr type="and">
                <!--<reference type="check" id="chk_snid_radius_perfil_nequnknown"/>--><!--se cambia el perfil por VF CFHP_Default en el caso unknown-->
                <reference type="check" id="chk_par_template_perfil_neq_par_radius_perfil"/>
              </expr>
            </test>

            <test id="tst_par_template_perfil_eq_par_radius_perfil_cm">
              <expr type="and">
                <!--<reference type="check" id="chk_snid_radius_perfil_nequnknown"/>--><!--se cambia el perfil por VF CFHP_Default en el caso unknown-->
                <reference type="check" id="chk_par_template_perfil_eq_par_radius_perfil_cm"/>
              </expr>
            </test>

            <test id="tst_par_template_perfil_neq_par_radius_perfil_cm">
              <expr type="and">
                <!--<reference type="check" id="chk_snid_radius_perfil_nequnknown"/>--><!--se cambia el perfil por VF CFHP_Default en el caso unknown-->
                <reference type="check" id="chk_par_template_perfil_neq_par_radius_perfil_cm"/>
              </expr>
            </test>

            <test id="tst_par_template_perfil_nat_eq_par_radius_perfil">
            	<expr type="and">
                <!--<reference type="check" id="chk_snid_radius_perfil_nequnknown"/>--><!--se cambia el perfil por VF CFHP_Default en el caso unknown-->
                <reference type="check" id="chk_par_template_perfil_nat_eq_par_radius_perfil"/>
              </expr>
            </test>

            <test id="tst_par_template_perfil_nat_neq_par_radius_perfil">
            	<expr type="and">
                <!--<reference type="check" id="chk_snid_radius_perfil_nequnknown"/>--><!--se cambia el perfil por VF CFHP_Default en el caso unknown-->
                <reference type="check" id="chk_par_template_perfil_nat_neq_par_radius_perfil"/>
              </expr>
            </test>
            <!-- FCS20210707_INCHM_146_3_Se corrige test que se llamaba igual que el de neq -->
            <test id="tst_par_template_perfil_nat_eq_par_radius_perfil_cm">
              <expr type="and">
                <!--<reference type="check" id="chk_snid_radius_perfil_nequnknown"/>--><!--se cambia el perfil por VF CFHP_Default en el caso unknown-->
                <reference type="check" id="chk_par_template_perfil_nat_eq_par_radius_perfil_cm"/>
              </expr>
            </test>

            <test id="tst_par_template_perfil_nat_neq_par_radius_perfil_cm">
              <expr type="and">
                <!--<reference type="check" id="chk_snid_radius_perfil_nequnknown"/>--><!--se cambia el perfil por VF CFHP_Default en el caso unknown-->
                <reference type="check" id="chk_par_template_perfil_nat_neq_par_radius_perfil_cm"/>
              </expr>
            </test>

            <!-- Comprobacion de Pool de Radius vs. Pool de Template -->
            <test id="tst_radius_pool_template_ok">
            	<expr type="and">
              	<reference type="test" id="tst_any_template_notnull"/>
              	<reference type="check" id="chk_par_radius_pool_nequnknown"/>
              	<reference type="test" id="tst_template_pool_notnull"/>
                <reference type="test" id="tst_par_template_pool_eq_par_radius_pool"/>
              </expr>
            </test>

            <!-- Comprobacion de Pool de Radius vs. Pool de Template -->
            <test id="tst_radius_pool_template_ok_cm">
              <expr type="and">
                <reference type="test" id="tst_any_template_notnull"/>
                <reference type="check" id="chk_par_radius_pool_nequnknown_cm"/>
                <reference type="test" id="tst_template_pool_notnull"/>
                <reference type="test" id="tst_par_template_pool_eq_par_radius_pool_cm"/>
              </expr>
            </test>

            <!-- Comprobacion de Pool de Radius vs. Pool NAT de Template -->
            <test id="tst_radius_pool_nat_template_ok">
            	<expr type="and">
              	<reference type="test" id="tst_any_template_notnull"/>
              	<reference type="check" id="chk_par_radius_pool_nequnknown"/>
              	<reference type="test" id="tst_template_pool_nat_notnull"/>
                <reference type="test" id="tst_par_template_pool_nat_eq_par_radius_pool"/>
              </expr>
            </test>

            <!-- Comprobacion de Pool de Radius vs. Pool NAT de Template -->
            <test id="tst_radius_pool_nat_template_ok_cm">
              <expr type="and">
                <reference type="test" id="tst_any_template_notnull"/>
                <reference type="check" id="chk_par_radius_pool_nequnknown_cm"/>
                <reference type="test" id="tst_template_pool_nat_notnull"/>
                <reference type="test" id="tst_par_template_pool_nat_eq_par_radius_pool_cm"/>
              </expr>
            </test>

            <!-- Comprobacion de Perfil de Radius vs. Perfil de Template -->
            <test id="tst_radius_perfil_template">
            	<expr type="and">
              	<reference type="test" id="tst_any_template_notnull"/><!--Inventario y lookup-->
              	<!--<reference type="check" id="chk_snid_radius_perfil_nequnknown"/>--><!--se cambia el perfil por VF CFHP_Default en el caso unknown-->
              	<reference type="test" id="tst_template_perfil_notnull"/>
                <reference type="test" id="tst_par_template_perfil_eq_par_radius_perfil"/>
              </expr>
            </test>

            <!-- Comprobacion de Perfil de Radius vs. Perfil de Template -->
            <test id="tst_radius_perfil_template_cm">
              <expr type="and">
                <reference type="test" id="tst_any_template_notnull"/><!--Inventario y lookup-->
                <!--<reference type="check" id="chk_snid_radius_perfil_nequnknown"/>--><!--se cambia el perfil por VF CFHP_Default en el caso unknown-->
                <reference type="test" id="tst_template_perfil_notnull"/>
                <reference type="test" id="tst_par_template_perfil_eq_par_radius_perfil_cm"/>
              </expr>
            </test>

            <!-- Comprobacion de Perfil de Radius vs. Perfil NAT de Template -->
            <test id="tst_radius_perfil_nat_template">
            	<expr type="and">
              	<reference type="test" id="tst_any_template_notnull"/><!--Inventario y lookup-->
              	<!--<reference type="check" id="chk_snid_radius_perfil_nequnknown"/>--><!--se cambia el perfil por VF CFHP_Default en el caso unknown-->
              	<reference type="test" id="tst_template_perfil_nat_notnull"/>
                <reference type="test" id="tst_par_template_perfil_nat_eq_par_radius_perfil"/>
              </expr>
            </test>

            <!-- FCS20210707_INCHM_146_3_Se aÃ±ade para CM+CPE que estaba referenciado y no aplicaba -->
            <test id="tst_radius_perfil_nat_template_cm">
            	<expr type="and">
              	<reference type="test" id="tst_any_template_notnull"/><!--Inventario y lookup-->
              	<!--<reference type="check" id="chk_snid_radius_perfil_nequnknown"/>--><!--se cambia el perfil por VF CFHP_Default en el caso unknown-->
              	<reference type="test" id="tst_template_perfil_nat_notnull"/>
                <reference type="test" id="tst_par_template_perfil_nat_eq_par_radius_perfil_cm"/>
              </expr>
            </test>

            <!-- Para usar en el requirement del diagnÃ³stico de Perfil RMS vs. Radius -->
            <test id="tst_radius_perfil_ok">
            	<expr type="or">
            		<reference type="test" id="tst_radius_perfil_template"/>
            		<reference type="test" id="tst_radius_perfil_nat_template"/>
            	</expr>
            </test>

            <!-- Para usar en el requirement del diagnÃ³stico de Pool RMS vs. Radius -->
            <test id="tst_radius_pool_ok">
            	<expr type="or">
            		<reference type="test" id="tst_radius_pool_template_ok"/>
            		<reference type="test" id="tst_radius_pool_nat_template_ok"/>
            	</expr>
            </test>

            <!-- Tests para caso Radius KO -->
	            <test id="tst_radius_pool_ko">
	            	<expr type="or">
	            		<reference type="test" id="tst_radius_pool_template_ko"/>
	            		<reference type="test" id="tst_radius_pool_nat_template_ko"/>
	            	</expr>
	            </test>

	            <test id="tst_radius_perfil_ko">
	            	<expr type="or">
	            		<reference type="test" id="tst_radius_perfil_template_ko"/>
	            		<reference type="test" id="tst_radius_perfil_nat_template_ko"/>
	            	</expr>
	            </test>

              <!-- Para usar en el requirement del diagnÃ³stico de Perfil RMS vs. Radius -->
            <test id="tst_radius_perfil_ok">
              <expr type="or">
                <reference type="test" id="tst_radius_perfil_template"/>
                <reference type="test" id="tst_radius_perfil_nat_template"/>
              </expr>
            </test>

            <!-- Para usar en el requirement del diagnÃ³stico de Pool RMS vs. Radius -->
            <test id="tst_radius_pool_ok_cm">
              <expr type="or">
                <reference type="test" id="tst_radius_pool_template_ok_cm"/>
                <reference type="test" id="tst_radius_pool_nat_template_ok_cm"/>
              </expr>
            </test>

            <!-- Tests para caso Radius KO -->
              <test id="tst_radius_pool_ko_cm">
                <expr type="or">
                  <reference type="test" id="tst_radius_pool_template_ko_cm"/>
                  <reference type="test" id="tst_radius_pool_nat_template_ko_cm"/>
                </expr>
              </test>

              <test id="tst_radius_perfil_ko_cm">
                <expr type="or">
                  <reference type="test" id="tst_radius_perfil_template_ko_cm"/>
                  <reference type="test" id="tst_radius_perfil_nat_template_ko_cm"/>
                </expr>
              </test>

              <!-- Para usar en el requirement del diagnÃ³stico de Perfil RMS vs. Radius -->
            <test id="tst_radius_perfil_ok_cm">
              <expr type="or">
                <reference type="test" id="tst_radius_perfil_template_cm"/>
                <reference type="test" id="tst_radius_perfil_nat_template_cm"/>
              </expr>
            </test>

            <test id="tst_radius_pool_template_ko">
    	            	<expr type="and">
    						<reference type="check" id="chk_snid_radius_pool_notcontainnat"/>
    						<reference type="test" id="tst_any_template_notnull"/><!--Inventario y lookup-->
    						<reference type="check" id="chk_par_radius_pool_nequnknown"/>
    						<reference type="test" id="tst_template_pool_notnull"/>
    						<reference type="test" id="tst_par_template_pool_neq_par_radius_pool"/>
    					</expr>
    				</test>

            <test id="tst_radius_pool_template_ko_cm">
                    <expr type="and">
                <reference type="check" id="chk_snid_radius_pool_notcontainnat_cm"/>
                <reference type="test" id="tst_any_template_notnull"/><!--Inventario y lookup-->
                <reference type="check" id="chk_par_radius_pool_nequnknown_cm"/>
                <reference type="test" id="tst_template_pool_notnull"/>
                <reference type="test" id="tst_par_template_pool_neq_par_radius_pool_cm"/>
              </expr>
            </test>

				<test id="tst_radius_pool_nat_template_ko">
					<expr type="and">
						<reference type="check" id="chk_snid_radius_pool_containsnat"/>
						<reference type="test" id="tst_any_template_notnull"/><!--Inventario y lookup-->
						<reference type="check" id="chk_par_radius_pool_nequnknown"/>
						<reference type="test" id="tst_template_pool_nat_notnull"/>
						<reference type="test" id="tst_par_template_pool_nat_neq_par_radius_pool"/>
					</expr>
				</test>
        <!-- FCS20210707_INCHM_146_3_Se aÃ±adte test para CM+CPE que aparecia referenciado pero no estaba credao -->
				<test id="tst_radius_pool_nat_template_ko_cm">
					<expr type="and">
						<reference type="check" id="chk_snid_radius_pool_containsnat"/>
						<reference type="test" id="tst_any_template_notnull"/><!--Inventario y lookup-->
						<reference type="check" id="chk_par_radius_pool_nequnknown"/>
						<reference type="test" id="tst_template_pool_nat_notnull"/>
						<reference type="test" id="tst_par_template_pool_nat_neq_par_radius_pool_cm"/>
					</expr>
				</test>

				<test id="tst_radius_perfil_template_ko">
					<expr type="and">
						<reference type="check" id="chk_snid_radius_perfil_notcontainnat"/>
						<reference type="test" id="tst_any_template_notnull"/><!--Inventario y lookup-->
						<!--<reference type="check" id="chk_snid_radius_perfil_nequnknown"/>--><!--se cambia el perfil por VF CFHP_Default en el caso unknown-->
						<reference type="test" id="tst_template_perfil_notnull"/>
						<reference type="test" id="tst_par_template_perfil_neq_par_radius_perfil"/>
					</expr>
				</test>

        <test id="tst_radius_perfil_template_ko_cm">
          <expr type="and">
            <reference type="check" id="chk_snid_radius_perfil_notcontainnat_cm"/>
            <reference type="test" id="tst_any_template_notnull"/><!--Inventario y lookup-->
            <!--<reference type="check" id="chk_snid_radius_perfil_nequnknown"/>--><!--se cambia el perfil por VF CFHP_Default en el caso unknown-->
            <reference type="test" id="tst_template_perfil_notnull"/>
            <reference type="test" id="tst_par_template_perfil_neq_par_radius_perfil_cm"/>
          </expr>
        </test>

				<test id="tst_radius_perfil_nat_template_ko">
					<expr type="and">
						<reference type="check" id="chk_snid_radius_perfil_containsnat"/>
						<reference type="test" id="tst_any_template_notnull"/><!--Inventario y lookup-->
						<!--<reference type="check" id="chk_snid_radius_perfil_nequnknown"/>--><!--se cambia el perfil por VF CFHP_Default en el caso unknown-->
						<reference type="test" id="tst_template_perfil_notnull"/>
						<reference type="test" id="tst_par_template_perfil_nat_neq_par_radius_perfil"/>
					</expr>
				</test>

        <!-- FCS20210707_INCHM_146_3_Se crea test que no estaba creado y aplica en otros tests -->
				<test id="tst_radius_perfil_nat_template_ko_cm">
					<expr type="and">
						<reference type="check" id="chk_snid_radius_perfil_containsnat"/>
						<reference type="test" id="tst_any_template_notnull"/><!--Inventario y lookup-->
						<!--<reference type="check" id="chk_snid_radius_perfil_nequnknown"/>--><!--se cambia el perfil por VF CFHP_Default en el caso unknown-->
						<reference type="test" id="tst_template_perfil_notnull"/>
						<reference type="test" id="tst_par_template_perfil_nat_neq_par_radius_perfil_cm"/>
					</expr>
				</test>

        <test id="tst_radius_perfil_nat_template_ko_cm">
          <expr type="and">
            <reference type="check" id="chk_snid_radius_perfil_containsnat_cm"/>
            <reference type="test" id="tst_any_template_notnull"/><!--Inventario y lookup-->
            <!--<reference type="check" id="chk_snid_radius_perfil_nequnknown"/>--><!--se cambia el perfil por VF CFHP_Default en el caso unknown-->
            <reference type="test" id="tst_template_perfil_notnull"/>
            <reference type="test" id="tst_par_template_perfil_nat_neq_par_radius_perfil_cm"/>
          </expr>
        </test>

            <!-- Config RADIUS KO -->
            	<!-- Test base -->

            		<test id="tst_radius_ko_ipdinamica">
						<!-- JJSM 20210504 - INCP_101 - INICIO-->
            			<expr type="and">
							<reference type="test" id="tst_voz_enrutada_si_front" inverse="true"/>
							<expr type="or">
								<reference type="test" id="tst_radius_pool_ko"/>
								<reference type="test" id="tst_radius_perfil_ko"/>
							</expr>
		            	</expr>
						<!-- JJSM 20210504 - INCP_101 - FIN-->
		            </test>

		            <test id="tst_radius_ko_ipfija">
						<!-- JJSM 20210504 - INCP_101 - INICIO-->
            			<expr type="and">
							<reference type="test" id="tst_voz_enrutada_si_front" inverse="true"/>
							<expr type="or">
								<reference type="test" id="tst_radius_perfil_ko"/>
								<reference type="test" id="tst_ip_isnotok"/>
							</expr>
		            	</expr>
						<!-- JJSM 20210504 - INCP_101 - FIN-->
		            </test>

		            <test id="tst_radius_ok_ipdinamica">
		            	<expr type="and">
		            		<reference type="test" id="tst_radius_pool_ok"/>
		            		<reference type="test" id="tst_radius_perfil_ok"/>
		            	</expr>
		            </test>

		            <test id="tst_radius_ok_ipfija">
		            	<expr type="and">
		            		<reference type="test" id="tst_radius_perfil_ok"/>
		            		<reference type="test" id="tst_ip_isok"/>
		            	</expr>
		            </test>

                <!--Test para clientes CM + CPE-->

                <test id="tst_radius_ko_ipdinamica_cm">
                  <expr type="or">
                    <reference type="test" id="tst_radius_pool_ko_cm"/>
                    <reference type="test" id="tst_radius_perfil_ko_cm"/>
                  </expr>
                </test>

                <test id="tst_radius_ko_ipfija_cm">
                  <expr type="or">
                    <reference type="test" id="tst_radius_perfil_ko_cm"/>
                    <reference type="test" id="tst_ip_isnotok_cm"/>
                  </expr>
                </test>

                <test id="tst_radius_ok_ipdinamica_cm">
                  <expr type="and">
                    <reference type="test" id="tst_radius_pool_ok_cm"/>
                    <reference type="test" id="tst_radius_perfil_ok_cm"/>
                  </expr>
                </test>

                <test id="tst_radius_ok_ipfija_cm">
                  <expr type="and">
                    <reference type="test" id="tst_radius_perfil_ok_cm"/>
                    <reference type="test" id="tst_ip_isok_cm"/>
                  </expr>
                </test>

		            <!--<test id="tst_config_radius_ko_ip_dinamica">
		            	<expr type="or">
		            		<reference type="test" id="tst_config_radius_ko_case1"/>--><!-- Pwds --><!--
		            		<reference type="test" id="tst_config_radius_ko_case2"/>--><!-- Pool --><!--
		            		<reference type="test" id="tst_config_radius_ko_case3"/>--><!-- Pool NAT --><!--
		            		<reference type="test" id="tst_config_radius_ko_case4"/>--><!-- Perfil --><!--
		            		<reference type="test" id="tst_config_radius_ko_case5"/>--><!-- Perfil NAT --><!--
		            	</expr>
		            </test>

		            <test id="tst_config_radius_ko_ip_fija">
		            	<expr type="or">
		            		<reference type="test" id="tst_config_radius_ko_case1"/>--><!-- Pwds --><!--
		            		<reference type="test" id="tst_snid_radius_ip_null"/>--><!-- IPs --><!--
		            		<reference type="test" id="tst_config_radius_ko_case4"/>--><!-- Perfil --><!--
		            		<reference type="test" id="tst_config_radius_ko_case5"/>--><!-- Perfil NAT --><!--
		            	</expr>
		            </test>

		            <test id="tst_config_radius_ok_ip_dinamica">
		            	<expr type="and">
		            		<reference type="test" id="tst_config_radius_ko_ip_dinamica" inverse="true"/>
		            	</expr>
		            </test>

		            <test id="tst_config_radius_ok_ip_fija">
		            	<expr type="and">
		            		<reference type="test" id="tst_config_radius_ko_ip_fija" inverse="true"/>
		            	</expr>
		            </test>

		            <test id="tst_radius_ok_ipfija_ipdinamica">
		            	<expr type="or">
		            		<reference type="test" id="tst_config_radius_ok_ip_dinamica"/>
		            		<reference type="test" id="tst_config_radius_ok_ip_fija"/>
		            	</expr>
		            </test>-->

	            <!-- Casos del test base -->
		           <!-- <test id="tst_config_radius_ko_case1">
		            	<expr type="and">
		            		- - - <reference type="test" id="tst_pwd_isok" inverse="true"/> - - -
		            	</expr>
		            		<reference type="test" id="tst_pwd_isok"/> este test es falso cuando las hay un problema de password
		            </test>-->

		           <!--  <test id="tst_config_radius_ok_case2">
		            	<expr type="and">
		            		<reference type="test" id="tst_radius_pool_notcontainnat"/>
		            		<reference type="test" id="tst_radius_pool_template_ok"/>
		            	</expr>
		            </test>

		            <test id="tst_config_radius_ok_case3">
		            	<expr type="and">
		            		<reference type="test" id="tst_radius_pool_containsnat"/>
		            		<reference type="test" id="tst_radius_pool_nat_template_ok"/>
		            	</expr>
		            </test>

		            <test id="tst_config_radius_ok_case4">
		            	<expr type="and">
		            		<reference type="test" id="tst_radius_perfil_notcontainnat"/>
		            		<reference type="test" id="tst_radius_perfil_template"/>
		            	</expr>
		            </test>

		            <test id="tst_config_radius_ok_case5">
		            	<expr type="and">
		            		<reference type="test" id="tst_radius_perfil_containsnat"/>
		            		<reference type="test" id="tst_radius_perfil_nat_template"/>
		            	</expr>
		            </test>-->


        	<!-- TEST DE PARAMETROS -->
        	<test id="tst_test_parameters">
        		<expr type="and">
        			<reference type="check" id="chk_service_status_activo"/>
        		</expr>
        	</test>

		<!-- TESTS DE Servicio_por_network_id (Lowi) -->

			<test id="tst_pareteum_bloqueo_impago">
        		<expr type="and">
        			<reference type="check" id="chk_snidlw_status_neq_active"/>
					<reference type="check" id="chk_snidlw_status_neq_designed"/>
					<reference type="check" id="chk_snidlw_status_neq_unknown"/>
        		</expr>
        	</test>

			<test id="tst_pareteum_no_bloqueo_impago">
				<expr type="or">
					<reference type="check" id="chk_snidlw_status_eq_active"/>
					<reference type="check" id="chk_snidlw_status_eq_designed"/>
					<reference type="check" id="chk_snidlw_status_eq_unknown"/>
				</expr>
			</test>

			<test id="tst_no_alta_pareteum">
        		<expr type="or">
        			<reference type="check" id="chk_snidlw_eq_usernotexist"/>
					<reference type="check" id="chk_snidlw_data_login_for_comparison_neq_data_login"/>
					<!--20200908_DAS: revisiÃ³n conjunta con VF, se elimina test porque en FTTH no se recupera LOGIN_PWD<reference type="check" id="chk_snidlw_data_password_neq_data_password"/>-->
        		</expr>
        	</test>

			<test id="tst_alta_pareteum">
        		<expr type="and">
        			<reference type="check" id="chk_snidlw_neq_usernotexist"/>
					<reference type="check" id="chk_snidlw_data_login_for_comparison_eq_data_login"/>
					<!--20200908_DAS: revisiÃ³n conjunta con VF, se elimina test porque en FTTH no se recupera LOGIN_PWD<reference type="check" id="chk_snidlw_data_password_eq_data_password"/>-->
        		</expr>
        	</test>

        	<!--Test Pareteum ok-->

        	<test id="tst_pareteum_ok_ipdinamica">
            	<expr type="and">
            		<reference type="test" id="tst_pareteum_perfil_ok"/>
            	</expr>
        	</test>

        	<test id="tst_pareteum_ko_ipdinamica">
            	<expr type="and">
            		<reference type="test" id="tst_pareteum_perfil_ko"/>
            	</expr>
        	</test>

        	<!--Test Pareteum Template-->

        	<test id="tst_pareteum_template_notcontainnat">
				<expr type="and">
					<reference type="check" id="chk_pareteum_template_notcontainnat"/>
				</expr>
			</test>

			<test id="tst_pareteum_template_nequnknown">
				<expr type="and">
					<reference type="check" id="chk_pareteum_template_nequnknown"/>
				</expr>
			</test>

			<!-- Tests para Inventario Perfil vs Pareteum Template KO -->

			<test id="tst_pareteum_perfil_ko">
				<expr type="or">
					<reference type="test" id="tst_pareteum_perfil_template_ko"/>
					<!--20200908_DAS: VF confirma que los templates de LOWI no contienen NAT<reference type="test" id="tst_pareteum_perfil_nat_template_ko"/>-->
				</expr>
			</test>

			<test id="tst_pareteum_perfil_template_ko">
				<expr type="and">
					<reference type="test" id="tst_any_template_notnull"/><!--Inventario y lookup-->
					<reference type="check" id="chk_pareteum_template_notcontainnat"/>
					<reference type="check" id="chk_pareteum_template_nequnknown"/><!--SNID-->
					<reference type="check" id="chk_template_notcontains_pareteum_template"/>
				</expr>
			</test>

			<!--20200908_DAS: VF confirma que los templates de LOWI no contienen NAT<test id="tst_pareteum_perfil_nat_template_ko">
				<expr type="and">
					<reference type="test" id="tst_any_template_notnull"/>
					<reference type="check" id="chk_pareteum_template_containsnat"/>
					<reference type="check" id="chk_pareteum_template_nequnknown"/>
					<reference type="check" id="chk_template_notcontains_pareteum_template"/>
				</expr>
			</test>-->

			<!-- Tests para Inventario Perfil vs Pareteum Template OK -->

			<test id="tst_pareteum_perfil_ok">
				<expr type="or">
					<reference type="test" id="tst_pareteum_perfil_template"/>
					<!--20200908_DAS: VF confirma que los templates de LOWI no contienen NAT<reference type="test" id="tst_pareteum_perfil_nat_template"/>-->
				</expr>
			</test>

			<test id="tst_pareteum_perfil_template">
            	<expr type="and">
					<reference type="test" id="tst_any_template_notnull"/><!--Inventario y lookup-->
					<reference type="check" id="chk_pareteum_template_notcontainnat"/>
					<reference type="check" id="chk_pareteum_template_nequnknown"/><!--SNID-->
					<reference type="check" id="chk_template_contains_pareteum_template"/>
              	</expr>
            </test>

      <!--Test de Pymes-->

        <!-- Tests para xDSL AI Voz Enrutada-->
          <!--VOZ_enrutada_no--><!--DAS20210326 - Se crean en Radius para usar datos de front-->
            <test id="tst_voz_enrutada_si_front">
              <expr type="and">
                <reference type="check" id="chk_front_grc_access_type_eq_xdsl_ai"/>
                <reference type="check" id="chk_inet_ip_address_front_nequnknown"/>
                <reference type="check" id="chk_front_grc_voip_ims_neq_unknown"/>
              </expr>
            </test>

          <!--VOZ_enrutada_no--><!--DAS20210326 - Se crean en Radius para usar datos de front-->
            <test id="tst_voz_enrutada_no_front">
              <expr type="and">
                <reference type="test" id="tst_voz_enrutada_si_front" inverse="true"/>
              </expr>
            </test>
      
      <!--RADIUS KO (Ip Fija)-->
      <test id="tst_radius_ko_ipfija_pymes"><!-- JJSM 20210323 - NO SE USA, LA VOZ ENRUTADA SE COMPRUEBA EN tst_radius_ok_voz_enrutada DESCARTAR? -->
        <expr type="or">
            <expr type="and">
              <reference type="test" id="tst_voz_enrutada_si_front"/><!--DAS20210326 - INCP_101-->
              <expr type="or">
                  <reference type="check" id="chk_radius_ip_neq_voip_ims"/>
                  <reference type="check" id="chk_radius_ip_not_contains_voip_ims"/>
                  <reference type="check" id="chk_radius_ip_not_contains_255.255.255.255"/>
              </expr>
            </expr>
            <expr type="and">
              <reference type="test" id="tst_voz_enrutada_no_front"/><!--DAS20210326 - INCP_101-->
              <reference type="test" id="tst_radius_ko_ipfija"/>
            </expr>
        </expr>
      </test>

      <!--RADIUS OK (Ip Fija)-->
      <test id="tst_radius_ok_ipfija_pymes"><!-- JJSM 20210323 - NO SE USA, LA VOZ ENRUTADA SE COMPRUEBA EN tst_radius_ok_voz_enrutada DESCARTAR? -->
        <expr type="or">
            <expr type="and">
              <reference type="test" id="tst_voz_enrutada_si_front"/><!--DAS20210326 - INCP_101-->
              <reference type="check" id="chk_radius_ip_eq_voip_ims"/>
              <reference type="check" id="chk_radius_ip_contains_voip_ims"/>
              <reference type="check" id="chk_radius_ip_contains_255.255.255.255"/>
            </expr>
            <expr type="and">
              <reference type="test" id="tst_voz_enrutada_no_front"/><!--DAS20210326 - INCP_101-->
              <reference type="test" id="tst_radius_ko_ipfija"/>
            </expr>
        </expr>
      </test>
	  <!-- JJSM 20210323 - INCP_101 - INICIO -->
    <test id="tst_radius_ip_contains_voip_ims">
      <expr type="and">
        <reference type="check" id="chk_radius_ip_contains_voip_ims"/>
      </expr>
    </test>
    <test id="tst_radius_framedroute_contains_ip_inet">
      <expr type="and">
        <reference type="check" id="chk_radius_framedroute_contains_ip_inet"/>
      </expr>
    </test>
    <test id="tst_radius_ok_voz_enrutada">
      <expr type="and">
        <reference type="test" id="tst_voz_enrutada_si_front"/><!--DAS20210326 - INCP_101-->
        <reference type="test" id="tst_radius_ip_contains_voip_ims"/><!--DAS20210326 - INCP_101 - Se elimina la referencia al rol-->
        <reference type="test" id="tst_radius_framedroute_contains_ip_inet"/><!--DAS20210326 - INCP_101 - Se elimina la referencia al rol-->
      </expr>
    </test>
	  <!-- JJSM 20210323 - INCP_101 - FIN -->

			<!--20200908_DAS: VF confirma que los templates de LOWI no contienen NAT<test id="tst_pareteum_perfil_nat_template">
            	<expr type="and">
					<reference type="test" id="tst_any_template_notnull"/>
					<reference type="check" id="chk_pareteum_template_containsnat"/>
					<reference type="check" id="chk_pareteum_template_nequnknown"/>
					<reference type="check" id="chk_template_contains_pareteum_template"/>
              	</expr>
            </test>-->

		<!-- JJSM 20220422 - OPTIZACION DIAGNOSTICOS - INICIO -->
		<test id="tst_radius_impago_optimized">
			<expr type="and">
				<reference type="check" id="chk_snid_radius_ciscoavpair_contains_ip_inacl_125"/>
			</expr>
		</test>

		<test id="tst_radius_ko_ipdinamica_optimized">
			<expr type="or">
				<reference type="test" id="tst_radius_pool_ko"/>
				<reference type="test" id="tst_radius_perfil_ko"/>
			</expr>
		</test>

		<test id="tst_radius_ko_ipfija_optimized">
			<expr type="or">
				<reference type="test" id="tst_radius_perfil_ko"/>
				<reference type="test" id="tst_ip_isnotok"/>
			</expr>
		</test>
		<test id="tst_radius_ok_voz_enrutada_optimized">
		  <expr type="and">
			<reference type="test" id="tst_radius_ip_contains_voip_ims"/>
			<reference type="test" id="tst_radius_framedroute_contains_ip_inet"/>
		  </expr>
		</test>
		<!-- JJSM 20220422 - OPTIZACION DIAGNOSTICOS - FIN -->

    <!--CCA20221111 - INC000059698088 - INICIO-->
    <test id="tst_cliente_hfc_mta">
        <expr type="and">
            <reference type="check" id="chk_mta_sip_access_id_neq_unknown"/>
        </expr>
    </test>

    <test id="tst_technology_ishfc_legacy">
        <expr type="and">
            <reference type="check" id="chk_grc_access_type_eq_hfc_legacy"/>
        </expr>
    </test>
    <!--CCA20221111 - INC000059698088 - FIN-->
		
    </tests>

    
    <actions>
    	<action id="act_desbloqueo" type="info">
    		<texts>
    			<text type="detail">Desbloqueo de servicios del cliente</text>
    			<!--<text type="warning">Va a desbloquear los servicios del cliente. Â¿Desea continuar?></text>-->
    			<text type="error">No se ha podido desbloquear los servicios del cliente.</text>
    		</texts>
    		<!--<inputs>
    		</inputs>
    		<args>
    		</args>
    		<sequence>
    			<operation type="command">
    				<args><arg><value type="value">id_...</value></arg></args>
    			</operation>
    		</sequence>-->
    	</action>
    	<action id="act_fix_car" type="button">
    		<texts>
    			<text type="detail">ActualizaciÃ³n de la informaciÃ³n de Radius</text>
    			<!--<text type="warning">Va a actualizar la informaciÃ³n del cliente en Radius. Â¿Desea continuar?></text>-->
    			<text type="error">No se ha podido actualizar la informaciÃ³n del cliente en Radius</text>
    		</texts>
    		
    		<sequence>
    			<step type="infosource" infosource="radius" endpointid="fc">
    				<args>
		    			<arg argid="arg_inet_data_login">
		    				<value type="parameter">par_radius_datalogin</value>
		    			</arg>
		    			<arg argid="arg_inet_data_password">
		    				<value type="parameter">par_inet_data_password_front</value>
		    			</arg>
		    			<arg argid="arg_inet_ip_address">
		    				<value type="parameter">par_inet_ip_address_front_nunknown</value>
		    			</arg>
		    		</args>
    			</step>
    		</sequence>
    		<messages>
    			<message id="msg_fix_car_ok" severity="info" datatype="text" storable="true">
    				<body>
    					<value type="value">Se ha actualizado la informaciÃ³n del cliente en Radius</value>
    				</body>    				
    				<requirement>
                        <expr type="and">
                        	<reference type="test" id="tst_endpoint_fc_isok"/>
                    	</expr>    					
    				</requirement>
    			</message>
    			<message id="msg_fix_car_ko" severity="error" datatype="text" storable="true">
    				<body>
    					<value type="value">No se pudo recuperar la respuesta de la llamada</value>
    					<!--<value type="parameter">par_fc_http_code</value>
    					<value type="parameter">par_fc_err_code</value>-->
    				</body>
    				<requirement>
                        <expr type="and">
                        	<reference type="test" id="tst_endpoint_fc_isok" inverse="true"/>
                    	</expr>    					
    				</requirement>
    			</message>
    		</messages>
    	</action>
    	<action id="act_fix_car_ftth" type="button">
    		<texts>
    			<text type="detail">ActualizaciÃ³n de la informaciÃ³n de Radius</text>
    			<!--<text type="warning">Va a actualizar la informaciÃ³n del cliente en Radius. Â¿Desea continuar?></text>-->
    			<text type="error">No se ha podido actualizar la informaciÃ³n del cliente en Radius</text>
    		</texts>
    		
    		<sequence>
    			<step type="infosource" infosource="radius" endpointid="fc_ftth">
    				<args>
		    			<arg argid="arg_inet_data_login">
		    				<value type="parameter">par_radius_datalogin</value>
		    			</arg>
		    			<arg argid="arg_inet_data_password">
		    				<value type="parameter">par_inet_data_password_front</value>
		    			</arg>
		    			<arg argid="arg_id_tv">
		    				<value type="parameter">par_id_tv_front_ftth</value>
		    			</arg>
		    		</args>
    			</step>
    		</sequence>
    		<messages>
    			<message id="msg_fix_car_ftth_ok" severity="info" datatype="text" storable="true">
    				<body>
    					<value type="value">Se ha actualizado la informaciÃ³n del cliente en Radius</value>
    				</body>    				
    				<requirement>
                        <expr type="and">
                        	<reference type="test" id="tst_endpoint_fc_ftth_isok"/>
                    	</expr>    					
    				</requirement>
    			</message>
    			<message id="msg_fix_car_ftth_ko" severity="error" datatype="text" storable="true">
    				<body>
    					<value type="value">No se pudo recuperar la respuesta de la llamada</value>
    					<!--<value type="parameter">par_fc_http_code</value>
    					<value type="parameter">par_fc_err_code</value>-->
    				</body>
    				<requirement>
                        <expr type="and">
                        	<reference type="test" id="tst_endpoint_fc_ftth_isok" inverse="true"/>
                    	</expr>    					
    				</requirement>
    			</message>
    		</messages>
    	</action>
      <action id="act_fix_car_cnr" type="button">
        <texts>
          <text type="detail">ActualizaciÃ³n de la informaciÃ³n de Radius CNR</text>
          <!--<text type="warning">Va a actualizar la informaciÃ³n del cliente en Radius. Â¿Desea continuar?></text>-->
          <text type="error">No se ha podido actualizar la informaciÃ³n del cliente en Radius CNR</text>
        </texts>
        
        <sequence>
          <step type="infosource" infosource="radius" endpointid="fc_cnr">
            <args>
              <arg argid="arg_service_id_datapassword">
                <value type="parameter">par_radius_serviceid_data_password</value>
              </arg>
              <arg argid="arg_inet_ip_address_old">
                <value type="parameter" role="inet">par_gsip_oip_cm_ip_address</value>
              </arg>
              <arg argid="arg_inet_ip_address">
                <value type="parameter" role="front">par_inet_ip_address</value>
              </arg>
            </args>
          </step>
        </sequence>
        <messages>
          <message id="msg_fix_car_cnr_ok" severity="info" datatype="text" storable="true">
            <body>
              <value type="value">Se ha actualizado la informaciÃ³n del cliente en CNR</value><!-- JJSM 20210517 - INCHC_016_2 -->
            </body>           
            <requirement>
                        <expr type="and">
                          <reference type="test" id="tst_endpoint_fc_cnr_isok"/>
                      </expr>             
            </requirement>
          </message>
          <message id="msg_fix_car_cnr_ko" severity="error" datatype="text" storable="true">
            <body>
              <value type="value">No se pudo recuperar la respuesta de la llamada</value>
              <!--<value type="parameter">par_fc_http_code</value>
              <value type="parameter">par_fc_err_code</value>-->
            </body>
            <requirement>
                        <expr type="and">
                          <reference type="test" id="tst_endpoint_fc_cnr_isok" inverse="true"/>
                      </expr>             
            </requirement>
          </message>
        </messages>
      </action>

      <!--FCS20210427_INCHC_020 - AcciÃ³n fix_car si ip dinamica INICIO-->
      <!--DBC_03062021_INCHC_010_2_Se crea nueva acciÃ³n para cnr ip dinÃ¡mica-->
     <action id="act_fix_car_cnr_ip_dinamica" type="button">
        <texts>
          <text type="detail">ActualizaciÃ³n de la informaciÃ³n de Radius CNR</text>
          <text type="error">No se ha podido actualizar la informaciÃ³n del cliente en Radius CNR</text>
        </texts>
        <sequence>
          <step type="infosource" infosource="radius" endpointid="fc_cnr_din">
            <args>
              <arg argid="arg_service_id_datapassword">
                <value type="parameter">par_radius_serviceid_data_password</value>
              </arg>
              <!--<arg argid="arg_inet_ip_address_old">
                <value type="parameter" role="inet">par_gsip_oip_cm_ip_address</value>
              </arg>
              <arg argid="arg_inet_ip_address">
                <value type="parameter" role="front">par_inet_dynamic_ip</value>
              </arg>-->
            </args>
          </step>
        </sequence>
        <messages>
          <message id="msg_fix_car_cnr_ok" severity="info" datatype="text" storable="true">
            <body>
              <value type="value">Se ha actualizado la informaciÃ³n del cliente en CNR</value><!-- JJSM 20210517 - INCHC_016_2 -->
            </body>           
            <requirement>
              <expr type="and">
                  <reference type="test" id="tst_endpoint_fc_cnr_din_isok"/>
              </expr>             
            </requirement>
          </message>
          <message id="msg_fix_car_cnr_ko" severity="error" datatype="text" storable="true">
            <body>
              <value type="value">No se pudo recuperar la respuesta de la llamada</value>
            </body>
            <requirement>
              <expr type="and">
                  <reference type="test" id="tst_endpoint_fc_cnr_din_isok" inverse="true"/>
              </expr>             
            </requirement>
          </message>
        </messages>
      </action>
      <!--FCS20210427_INCHC_020 - AcciÃ³n fix_car si ip dinamica FIN-->

    	<!-- JJSM 20210323 - INCP_101 - INICIO -->
    	<action id="act_fix_car_routedvoice" type="button">
    		<texts>
    			<text type="detail">ActualizaciÃ³n de la informaciÃ³n de Radius</text>
    			<!--<text type="warning">Va a actualizar la informaciÃ³n del cliente en Radius. Â¿Desea continuar?></text>-->
    			<text type="error">No se ha podido actualizar la informaciÃ³n del cliente en Radius</text>
    		</texts>
    		<sequence>
    			<step type="infosource" infosource="radius" endpointid="fc_routedvoice">
    				<args>
						<!-- JJSM 20210510 - INCP_101 - INICIO -->
		    			<arg argid="arg_inet_data_login">
		    				<value type="parameter">par_radius_datalogin</value>
		    			</arg>
		    			<arg argid="arg_inet_data_password">
		    				<value type="parameter">par_inet_data_password_front</value>
		    			</arg>
						<!-- JJSM 20210510 - INCP_101 - FIN -->
		    			<arg argid="arg_grc_voip_ims">
		    				<value type="parameter" role="front">par_grc_voip_ims</value>
		    			</arg>
		    			<arg argid="arg_inet_ip_address">
		    				<value type="parameter" role="front">par_inet_ip_address</value>
		    			</arg>
		    			<arg argid="arg_radius_framedroute_prefix">
		    				<value type="parameter">par_radius_framedroute_prefix</value>
		    			</arg>
		    		</args>
    			</step>
    		</sequence>
    		<messages>
    			<message id="msg_fix_car_ok" severity="info" datatype="text" storable="true">
    				<body>
    					<value type="value">Se ha actualizado la informaciÃ³n del cliente en Radius</value>
    				</body>    				
    				<requirement>
                        <expr type="and">
                        	<reference type="test" id="tst_endpoint_fc_enrutada_isok"/><!--JJSM 20210510 - INCP_101_2 -->
                    	</expr>    					
    				</requirement>
    			</message>
    			<message id="msg_fix_car_ko" severity="error" datatype="text" storable="true">
    				<body>
    					<value type="value">No se pudo recuperar la respuesta de la llamada</value>
    					<!--<value type="parameter">par_fc_http_code</value>
    					<value type="parameter">par_fc_err_code</value>-->
    				</body>
    				<requirement>
                        <expr type="and">
                        	<reference type="test" id="tst_endpoint_fc_enrutada_isok" inverse="true"/><!--JJSM 20210510 - INCP_101_2 -->
                    	</expr>    					
    				</requirement>
    			</message>
    		</messages>
    	</action>
    	<!-- JJSM 20210323 - INCP_101 - INICIO -->
		<action id="act_ebi" type="button">
    		<texts>
    			<text type="detail">Desbloquear los servicios del cliente</text>
    			<!--<text type="warning">Va a desbloquear los servicios del cliente. Â¿Desea continuar?></text>-->
    			<text type="error">No se ha podido desbloquear al cliente</text>
    		</texts>
    		
    		<sequence>
    			<step type="infosource" infosource="radius" endpointid="ebi">
    				<args>
		    			<arg argid="arg_data_login">
		    				<value type="parameter">par_radius_datalogin</value>    				
		    			</arg>
		    			<arg argid="arg_service_id">    				
		    				<value type="parameter">par_radius_service_id</value>
		    			</arg>
		    		</args>
    			</step>
    		</sequence>   		
    		<messages>
    			<message id="msg_eliminar_bloqueo_impago_ok" severity="info" datatype="text" storable="true">
    				<body>
						<value type="value">Cliente desbloqueado</value>
					</body>
    				<requirement>
                        <expr type="and">
                        	<reference type="test" id="tst_endpoint_ebi_isok"/>
                    	</expr>      					
    				</requirement>
    			</message>
    			<message id="msg_eliminar_bloqueo_impago_ko" severity="error" datatype="text" storable="true">
    				<body>
						<value type="value">No se pudo desbloquear al cliente</value>
					</body>
    				<requirement>
                        <expr type="and">
                        	<reference type="test" id="tst_endpoint_ebi_isok" inverse="true"/>
                    	</expr>      					
    				</requirement>
    			</message>
    		</messages>
    	</action>
      <action id="act_ebi_cnr" type="button">
        <texts>
          <text type="detail">Desbloquear los servicios del cliente en CNR</text>
          <!--<text type="warning">Va a desbloquear los servicios del cliente. Â¿Desea continuar?></text>-->
          <text type="error">No se ha podido desbloquear al cliente en CNR</text>
        </texts>
        
        <sequence>
          <step type="infosource" infosource="radius" endpointid="ebi_cnr">
            <args>
              <arg argid="arg_service_id_datapassword">
                <value type="parameter">par_radius_serviceid_data_password</value>            
              </arg>
            </args>
          </step>
        </sequence>       
        <messages>
          <message id="msg_eliminar_bloqueo_impago_cnr_ok" severity="info" datatype="text" storable="true">
            <body>
            <value type="value">Cliente desbloqueado</value>
          </body>
            <requirement>
              <expr type="and">
                  <reference type="test" id="tst_endpoint_ebi_cnr_isok"/>
              </expr>               
            </requirement>
          </message>
          <message id="msg_eliminar_bloqueo_impago_cnr_ko" severity="error" datatype="text" storable="true">
            <body>
            <value type="value">No se pudo desbloquear al cliente</value>
          </body>
            <requirement>
              <expr type="and">
                  <reference type="test" id="tst_endpoint_ebi_cnr_isok" inverse="true"/>
              </expr>               
            </requirement>
          </message>
        </messages>
      </action>
    	<action id="act_desactivar_nat" type="button">
    		<texts>
    			<text type="detail">Desactivar Nateado del cliente</text>
    			<!--<text type="warning">Va a desbloquear los servicios del cliente. Â¿Desea continuar?></text>-->
    			<text type="error">No se ha podido desnatear al cliente</text>
    		</texts>
    		
    		<sequence>
    			<step type="infosource" infosource="radius" endpointid="desnat">
    				<args>
		    			<arg argid="arg_username">
		    				<value type="parameter">par_radius_datalogin</value>    				
		    			</arg>
		    			<arg argid="arg_service_id">    				
		    				<value type="parameter">par_radius_service_id</value>
		    			</arg>
		    		</args>
    			</step>
    		</sequence>   		
    		<messages>
    			<message id="msg_desnatear_ok" severity="info" datatype="text" storable="true">
    				<body>
						<value type="value">Cliente desnateado</value>
					</body>
    				<requirement>
                        <expr type="and">
                        	<reference type="test" id="tst_endpoint_desnat_isok"/>
                    	</expr>      					
    				</requirement>
    			</message>
    			<message id="msg_desnatear_ko" severity="error" datatype="text" storable="true">
    				<body>
						<value type="value">No se pudo desnatear al cliente</value>
					</body>
    				<requirement>
                        <expr type="and">
                        	<reference type="test" id="tst_endpoint_desnat_isok" inverse="true"/>
                    	</expr>      					
    				</requirement>
    			</message>
    		</messages>
    	</action>

      <action id="act_activar_nat" type="button">
        <texts>
          <text type="detail">Activar Nateado del cliente</text>
          <!--<text type="warning">Va a desbloquear los servicios del cliente. Â¿Desea continuar?></text>-->
          <text type="error">No se ha podido activar el Nat del cliente</text>
        </texts>
        <sequence>
          <step type="infosource" infosource="radius" endpointid="activar_nat">
            <args>
              <arg argid="arg_username">
                <value type="parameter">par_radius_datalogin</value>            
              </arg>
              <arg argid="arg_service_id">            
                <value type="parameter">par_radius_service_id</value>
              </arg>
            </args>
          </step>
        </sequence>       
        <!--<messages>
          <message id="msg_natear_ok" severity="info" datatype="text" storable="true">
            <body>
            <value type="value">Activar Nat completado</value>
          </body>
            <requirement>
                        <expr type="and">
                          <reference type="test" id="tst_endpoint_actnat_isok"/>
                      </expr>               
            </requirement>
          </message>
          <message id="msg_natear_ko" severity="error" datatype="text" storable="true">
            <body>
            <value type="value">No se pudo activar el Nat del cliente</value>
          </body>
            <requirement>
                        <expr type="and">
                          <reference type="test" id="tst_endpoint_actnat_isok" inverse="true"/>
                      </expr>               
            </requirement>
          </message>
        </messages>-->
      </action>

      <action id="act_reset_session" type="button">
        <texts>
          <text type="detail">Se va a resetear la sesiÃ³n del cliente</text>
          <!--<text type="warning">Va a desbloquear los servicios del cliente. Â¿Desea continuar?></text>-->
          <text type="error">No se ha podido resetear la sesiÃ³n del cliente</text>
        </texts>       
        <messages>
          <!--<message id="msg_rstsession_ok" severity="info" datatype="text" storable="true">
            <body>
            <value type="value">Se ha reseteado la sesiÃ³n del cliente</value>
          </body>
            <requirement>
                <expr type="and">
                    <reference type="test" id="tst_endpoint_rstsession_isok"/>
                </expr>               
            </requirement>
          </message>-->
          <message id="msg_rstsession_pend" severity="info" datatype="text" storable="true">
            <body>
              <value type="value">Reset de SesiÃ³n en curso</value>
            </body>
            <requirement>
              <expr type="or">      
                <reference type="test" id="tst_endpoint_rstsession_istimeout"/>
                <reference type="test" id="tst_endpoint_rstsession_isok" inverse="true"/>
              </expr>
            </requirement>
          </message>
          <!--<message id="msg_rstsession_ko" severity="error" datatype="text" storable="true">
            <body>
            <value type="value">No se ha podido resetear la sesiÃ³n del cliente</value>
          </body>
            <requirement>
              <expr type="and">
                  <reference type="test" id="tst_endpoint_rstsession_isok" inverse="true"/>
              </expr>               
            </requirement>
          </message>-->
        </messages>
        <result>
          <expr type="and">
              <reference type="test" id="tst_endpoint_rstsession_istimeout"/>
              <reference type="test" id="tst_endpoint_rstsession_isok" inverse="true"/>
          </expr>
        </result>
      </action>
    </actions>

</template>